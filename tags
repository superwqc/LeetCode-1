!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/2e447bfd/
132-pattern.cc	132-pattern.cc	1;"	F	language:C++
3sum-closest.cc	3sum-closest.cc	1;"	F	language:C++
3sum-smaller.cc	3sum-smaller.cc	1;"	F	language:C++
3sum.cc	3sum.cc	1;"	F	language:C++
4sum-ii.cc	4sum-ii.cc	1;"	F	language:C++
4sum.cc	4sum.cc	1;"	F	language:C++
A	wiggle-sort-ii.cc	/^#define A(/;"	d	language:C++	file:
AB	longest-substring-with-at-least-k-repeating-characters.cc	/^  static const int AB = 26;$/;"	m	language:C++	class:Solution	typeref:typename:const int	file:
ALL	freedom-trail.cc	/^#define ALL(/;"	d	language:C++	file:
ALL	increasing-subsequences.cc	/^#define ALL(/;"	d	language:C++	file:
ALL	target-sum.cc	/^#define ALL(/;"	d	language:C++	file:
Algorithms	README.md	/^## Algorithms$/;"	2	language:markdown
AllOne	all-oone-data-structure.cc	/^  AllOne() {$/;"	f	language:C++	class:AllOne	file:
AllOne	all-oone-data-structure.cc	/^class AllOne {$/;"	c	language:C++	file:
BSTIterator	binary-search-tree-iterator.cc	/^  BSTIterator(TreeNode *t) : x(t) {}$/;"	f	language:C++	class:BSTIterator	file:
BSTIterator	binary-search-tree-iterator.cc	/^  BSTIterator(TreeNode *t) {$/;"	f	language:C++	class:BSTIterator	file:
BSTIterator	binary-search-tree-iterator.cc	/^class BSTIterator {$/;"	c	language:C++	file:
Bucket	all-oone-data-structure.cc	/^  struct Bucket { int v; unordered_set<string> ks; };$/;"	s	language:C++	class:AllOne	file:
Cmp	merge-k-sorted-lists.cc	/^    struct Cmp {$/;"	s	language:C++	function:Solution::mergeKLists	file:
Codec	encode-and-decode-strings.cc	/^class Codec {$/;"	c	language:C++	file:
Codec	serialize-and-deserialize-binary-tree.cc	/^class Codec {$/;"	c	language:C++	file:
Combine Two Tables	database.md	/^## Combine Two Tables$/;"	2	language:markdown
Consecutive Numbers	database.md	/^## Consecutive Numbers$/;"	2	language:markdown
Customers Who Never Order	database.md	/^## Customers Who Never Order$/;"	2	language:markdown
D	sudoku-solver.cc	/^  int L[M], R[M], U[M], D[M], col[M], size[M], res[N*N];$/;"	m	language:C++	class:Solution	typeref:typename:int[][][][]	file:
Database	README.md	/^## Database$/;"	2	language:markdown
Delete Duplicate Emails	database.md	/^## Delete Duplicate Emails$/;"	2	language:markdown
Department Highest Salary	database.md	/^## Department Highest Salary$/;"	2	language:markdown
Department Top Three Salaries	database.md	/^## Department Top Three Salaries$/;"	2	language:markdown
E	repeated-dna-sequences.cc	/^typedef tuple<int,int,int> E;$/;"	t	language:C++	typeref:typename:tuple<int,int,int>	file:
Employees Earning More Than Their Managers	database.md	/^## Employees Earning More Than Their Managers$/;"	2	language:markdown
FOR	132-pattern.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	additive-number.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	battleships-in-a-board.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	best-meeting-point.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	best-time-to-buy-and-sell-stock-iv.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	best-time-to-buy-and-sell-stock-with-cooldown.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	bomb-enemy.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	burst-balloons.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	concatenated-words.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	construct-binary-tree-from-inorder-and-postorder-traversal.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	construct-binary-tree-from-preorder-and-inorder-traversal.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	count-numbers-with-unique-digits.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	count-primes.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	count-the-repetitions.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	course-schedule.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	create-maximum-number.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	decode-ways.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	different-ways-to-add-parentheses.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	distinct-subsequences.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	factorial-trailing-zeroes.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	find-all-anagrams-in-a-string.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	find-right-interval.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	find-the-celebrity.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	freedom-trail.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	gas-station.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	gray-code.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	h-index.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	increasing-subsequences.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	insertion-sort-list.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	interleaving-string.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	ipo.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	island-perimeter.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	jump-game-ii.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	largest-divisible-subset.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	largest-number.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	lonely-pixel-i.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	lonely-pixel-ii.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	longest-common-prefix.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	longest-palindromic-substring.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	matchsticks-to-square.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	max-points-on-a-line.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	max-sum-of-sub-matrix-no-larger-than-k.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	maximal-rectangle.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	maximal-square.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	minimum-window-substring.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	number-of-boomerangs.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	number-of-connected-components-in-an-undirected-graph.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	number-of-islands.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	optimal-account-balancing.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	pacific-atlantic-water-flow.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	paint-house-ii.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	paint-house.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	palindrome-partitioning-ii.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	palindrome-partitioning.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	pascals-triangle-ii.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	pascals-triangle.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	permutations.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	product-of-array-except-self.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	range-sum-query-immutable.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	rearrange-string-k-distance-apart.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	repeated-dna-sequences.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	restore-ip-addresses.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	rotate-array.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	scramble-string.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	sequence-reconstruction.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	set-matrix-zeroes.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	single-number-ii.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	sliding-window-maximum.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	spiral-matrix-ii.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	spiral-matrix.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	strong-password-checker.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	subsets-ii.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	subsets.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	summary-ranges.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	surrounded-regions.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	target-sum.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	text-justification.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	the-maze.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	total-hamming-distance.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	trapping-rain-water-ii.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	triangle.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	unique-binary-search-trees-ii.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	unique-binary-search-trees.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	walls-and-gates.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	word-break-ii.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	word-ladder.cc	/^#define FOR(/;"	d	language:C++	file:
FOR	word-search-ii.cc	/^#define FOR(/;"	d	language:C++	file:
HitCounter	design-hit-counter.cc	/^  HitCounter() {$/;"	f	language:C++	class:HitCounter	file:
HitCounter	design-hit-counter.cc	/^class HitCounter {$/;"	c	language:C++	file:
Iterator	peeking-iterator.cc	/^class Iterator {$/;"	c	language:C++	file:
KoAluru	create-maximum-number.cc	/^namespace KoAluru$/;"	n	language:C++	file:
L	sudoku-solver.cc	/^  int L[M], R[M], U[M], D[M], col[M], size[M], res[N*N];$/;"	m	language:C++	class:Solution	typeref:typename:int[]	file:
L1	count-the-repetitions.cc	/^const int L1 = 100, N2 = 1000000;$/;"	v	language:C++	typeref:typename:const int
LRUCache	lru-cache.cc	/^  LRUCache(int capacity) : c(capacity) {}$/;"	f	language:C++	class:LRUCache	file:
LRUCache	lru-cache.cc	/^class LRUCache {$/;"	c	language:C++	file:
LeetCode	README.md	/^# LeetCode$/;"	1	language:markdown
Logger	logger-rate-limiter.cc	/^  Logger() {$/;"	f	language:C++	class:Logger	file:
Logger	logger-rate-limiter.cc	/^class Logger {$/;"	c	language:C++	file:
M	sudoku-solver.cc	/^  static const int N = 9, MAXR = N*N*N, MAXC = N*N*4, M = MAXC+1+MAXR*4;$/;"	m	language:C++	class:Solution	typeref:typename:const int	file:
MAXC	sudoku-solver.cc	/^  static const int N = 9, MAXR = N*N*N, MAXC = N*N*4, M = MAXC+1+MAXR*4;$/;"	m	language:C++	class:Solution	typeref:typename:const int	file:
MAXR	sudoku-solver.cc	/^  static const int N = 9, MAXR = N*N*N, MAXC = N*N*4, M = MAXC+1+MAXR*4;$/;"	m	language:C++	class:Solution	typeref:typename:const int	file:
MedianFinder	find-median-from-data-stream.cc	/^class MedianFinder {$/;"	c	language:C++	file:
MinStack	min-stack.cc	/^  MinStack() : s(0), d(INT_MAX) {}$/;"	f	language:C++	class:MinStack	file:
MinStack	min-stack.cc	/^  MinStack() {}$/;"	f	language:C++	class:MinStack	file:
MinStack	min-stack.cc	/^class MinStack {$/;"	c	language:C++	file:
MovingAverage	moving-average-from-data-stream.cc	/^  MovingAverage(int size) : size(size), a(size) {}$/;"	f	language:C++	class:MovingAverage	file:
MovingAverage	moving-average-from-data-stream.cc	/^class MovingAverage {$/;"	c	language:C++	file:
N	sudoku-solver.cc	/^  static const int N = 9, MAXR = N*N*N, MAXC = N*N*4, M = MAXC+1+MAXR*4;$/;"	m	language:C++	class:Solution	typeref:typename:const int	file:
N2	count-the-repetitions.cc	/^const int L1 = 100, N2 = 1000000;$/;"	v	language:C++	typeref:typename:const int
NestedIterator	flatten-nested-list-iterator.cc	/^  NestedIterator(vector<NestedInteger> &nestedList) {$/;"	f	language:C++	class:NestedIterator	file:
NestedIterator	flatten-nested-list-iterator.cc	/^class NestedIterator {$/;"	c	language:C++	file:
Nth Highest Salary	database.md	/^## Nth Highest Salary$/;"	2	language:markdown
NumArray	range-sum-query-immutable.cc	/^  NumArray(vector<int> &nums) {$/;"	f	language:C++	class:NumArray	file:
NumArray	range-sum-query-immutable.cc	/^class NumArray {$/;"	c	language:C++	file:
NumArray	range-sum-query-mutable.cc	/^  NumArray(vector<int> &nums) {$/;"	f	language:C++	class:NumArray	file:
NumArray	range-sum-query-mutable.cc	/^class NumArray {$/;"	c	language:C++	file:
NumMatrix	range-sum-query-2d-immutable.cc	/^  NumMatrix(vector<vector<int>> &matrix) {$/;"	f	language:C++	class:NumMatrix	file:
NumMatrix	range-sum-query-2d-immutable.cc	/^class NumMatrix {$/;"	c	language:C++	file:
NumMatrix	range-sum-query-2d-mutable.cc	/^  NumMatrix(vector<vector<int>> &matrix) {$/;"	f	language:C++	class:NumMatrix	file:
NumMatrix	range-sum-query-2d-mutable.cc	/^class NumMatrix {$/;"	c	language:C++	file:
PeekingIterator	peeking-iterator.cc	/^  PeekingIterator(const vector<int>& nums) : Iterator(nums) {$/;"	f	language:C++	class:PeekingIterator	file:
PeekingIterator	peeking-iterator.cc	/^class PeekingIterator : public Iterator {$/;"	c	language:C++	file:
PhoneDirectory	design-phone-directory.cc	/^  PhoneDirectory(int maxNumbers) : a(maxNumbers), used(maxNumbers, false) {$/;"	f	language:C++	class:PhoneDirectory	file:
PhoneDirectory	design-phone-directory.cc	/^class PhoneDirectory {$/;"	c	language:C++	file:
Queue	implement-queue-using-stacks.cc	/^class Queue {$/;"	c	language:C++	file:
R	sudoku-solver.cc	/^  int L[M], R[M], U[M], D[M], col[M], size[M], res[N*N];$/;"	m	language:C++	class:Solution	typeref:typename:int[][]	file:
README.md	README.md	1;"	F	language:markdown
REP	132-pattern.cc	/^#define REP(/;"	d	language:C++	file:
REP	3sum-closest.cc	/^#define REP(/;"	d	language:C++	file:
REP	add-binary.cc	/^#define REP(/;"	d	language:C++	file:
REP	battleships-in-a-board.cc	/^#define REP(/;"	d	language:C++	file:
REP	best-meeting-point.cc	/^#define REP(/;"	d	language:C++	file:
REP	best-time-to-buy-and-sell-stock-iv.cc	/^#define REP(/;"	d	language:C++	file:
REP	bomb-enemy.cc	/^#define REP(/;"	d	language:C++	file:
REP	burst-balloons.cc	/^#define REP(/;"	d	language:C++	file:
REP	combinations.cc	/^#define REP(/;"	d	language:C++	file:
REP	construct-binary-tree-from-inorder-and-postorder-traversal.cc	/^#define REP(/;"	d	language:C++	file:
REP	construct-binary-tree-from-preorder-and-inorder-traversal.cc	/^#define REP(/;"	d	language:C++	file:
REP	count-and-say.cc	/^#define REP(/;"	d	language:C++	file:
REP	count-numbers-with-unique-digits.cc	/^#define REP(/;"	d	language:C++	file:
REP	count-of-smaller-numbers-after-self.cc	/^#define REP(/;"	d	language:C++	file:
REP	count-the-repetitions.cc	/^#define REP(/;"	d	language:C++	file:
REP	course-schedule.cc	/^#define REP(/;"	d	language:C++	file:
REP	create-maximum-number.cc	/^#define REP(/;"	d	language:C++	file:
REP	decode-ways.cc	/^#define REP(/;"	d	language:C++	file:
REP	different-ways-to-add-parentheses.cc	/^#define REP(/;"	d	language:C++	file:
REP	distinct-subsequences.cc	/^#define REP(/;"	d	language:C++	file:
REP	edit-distance.cc	/^#define REP(/;"	d	language:C++	file:
REP	factorial-trailing-zeroes.cc	/^#define REP(/;"	d	language:C++	file:
REP	find-all-anagrams-in-a-string.cc	/^#define REP(/;"	d	language:C++	file:
REP	find-right-interval.cc	/^#define REP(/;"	d	language:C++	file:
REP	find-the-celebrity.cc	/^#define REP(/;"	d	language:C++	file:
REP	first-missing-positive.cc	/^#define REP(/;"	d	language:C++	file:
REP	freedom-trail.cc	/^#define REP(/;"	d	language:C++	file:
REP	game-of-life.cc	/^#define REP(/;"	d	language:C++	file:
REP	gas-station.cc	/^#define REP(/;"	d	language:C++	file:
REP	generate-parentheses.cc	/^#define REP(/;"	d	language:C++	file:
REP	gray-code.cc	/^#define REP(/;"	d	language:C++	file:
REP	h-index.cc	/^#define REP(/;"	d	language:C++	file:
REP	implement-strstr.cc	/^#define REP(/;"	d	language:C++	file:
REP	increasing-subsequences.cc	/^#define REP(/;"	d	language:C++	file:
REP	insertion-sort-list.cc	/^#define REP(/;"	d	language:C++	file:
REP	integer-to-roman.cc	/^#define REP(/;"	d	language:C++	file:
REP	interleaving-string.cc	/^#define REP(/;"	d	language:C++	file:
REP	ipo.cc	/^#define REP(/;"	d	language:C++	file:
REP	island-perimeter.cc	/^#define REP(/;"	d	language:C++	file:
REP	jump-game.cc	/^#define REP(/;"	d	language:C++	file:
REP	largest-divisible-subset.cc	/^#define REP(/;"	d	language:C++	file:
REP	largest-number.cc	/^#define REP(/;"	d	language:C++	file:
REP	largest-rectangle-in-histogram.cc	/^#define REP(/;"	d	language:C++	file:
REP	lonely-pixel-i.cc	/^#define REP(/;"	d	language:C++	file:
REP	lonely-pixel-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	longest-common-prefix.cc	/^#define REP(/;"	d	language:C++	file:
REP	longest-increasing-path-in-a-matrix.cc	/^#define REP(/;"	d	language:C++	file:
REP	longest-palindromic-substring.cc	/^#define REP(/;"	d	language:C++	file:
REP	matchsticks-to-square.cc	/^#define REP(/;"	d	language:C++	file:
REP	max-points-on-a-line.cc	/^#define REP(/;"	d	language:C++	file:
REP	max-sum-of-sub-matrix-no-larger-than-k.cc	/^#define REP(/;"	d	language:C++	file:
REP	maximal-rectangle.cc	/^#define REP(/;"	d	language:C++	file:
REP	maximal-square.cc	/^#define REP(/;"	d	language:C++	file:
REP	minimum-height-trees.cc	/^#define REP(/;"	d	language:C++	file:
REP	minimum-path-sum.cc	/^#define REP(/;"	d	language:C++	file:
REP	minimum-window-substring.cc	/^#define REP(/;"	d	language:C++	file:
REP	multiply-strings.cc	/^#define REP(/;"	d	language:C++	file:
REP	number-of-boomerangs.cc	/^#define REP(/;"	d	language:C++	file:
REP	number-of-connected-components-in-an-undirected-graph.cc	/^#define REP(/;"	d	language:C++	file:
REP	number-of-islands.cc	/^#define REP(/;"	d	language:C++	file:
REP	optimal-account-balancing.cc	/^#define REP(/;"	d	language:C++	file:
REP	pacific-atlantic-water-flow.cc	/^#define REP(/;"	d	language:C++	file:
REP	paint-house-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	paint-house.cc	/^#define REP(/;"	d	language:C++	file:
REP	palindrome-pairs.cc	/^#define REP(/;"	d	language:C++	file:
REP	palindrome-partitioning-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	palindrome-partitioning.cc	/^#define REP(/;"	d	language:C++	file:
REP	pascals-triangle-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	pascals-triangle.cc	/^#define REP(/;"	d	language:C++	file:
REP	permutations.cc	/^#define REP(/;"	d	language:C++	file:
REP	product-of-array-except-self.cc	/^#define REP(/;"	d	language:C++	file:
REP	range-sum-query-2d-immutable.cc	/^#define REP(/;"	d	language:C++	file:
REP	range-sum-query-2d-mutable.cc	/^#define REP(/;"	d	language:C++	file:
REP	rearrange-string-k-distance-apart.cc	/^#define REP(/;"	d	language:C++	file:
REP	regular-expression-matching.cc	/^#define REP(/;"	d	language:C++	file:
REP	remove-duplicate-letters.cc	/^#define REP(/;"	d	language:C++	file:
REP	remove-invalid-parentheses.cc	/^#define REP(/;"	d	language:C++	file:
REP	repeated-dna-sequences.cc	/^#define REP(/;"	d	language:C++	file:
REP	restore-ip-addresses.cc	/^#define REP(/;"	d	language:C++	file:
REP	reverse-nodes-in-k-group.cc	/^#define REP(/;"	d	language:C++	file:
REP	roman-to-integer.cc	/^#define REP(/;"	d	language:C++	file:
REP	rotate-array.cc	/^#define REP(/;"	d	language:C++	file:
REP	rotate-image.cc	/^#define REP(/;"	d	language:C++	file:
REP	scramble-string.cc	/^#define REP(/;"	d	language:C++	file:
REP	sequence-reconstruction.cc	/^#define REP(/;"	d	language:C++	file:
REP	set-matrix-zeroes.cc	/^#define REP(/;"	d	language:C++	file:
REP	shortest-distance-from-all-buildings.cc	/^#define REP(/;"	d	language:C++	file:
REP	single-number-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	sliding-window-maximum.cc	/^#define REP(/;"	d	language:C++	file:
REP	smallest-rectangle-enclosing-black-pixels.cc	/^#define REP(/;"	d	language:C++	file:
REP	sparse-matrix-multiplication.cc	/^#define REP(/;"	d	language:C++	file:
REP	spiral-matrix-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	spiral-matrix.cc	/^#define REP(/;"	d	language:C++	file:
REP	strong-password-checker.cc	/^#define REP(/;"	d	language:C++	file:
REP	subsets-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	subsets.cc	/^#define REP(/;"	d	language:C++	file:
REP	substring-with-concatenation-of-all-words.cc	/^#define REP(/;"	d	language:C++	file:
REP	sudoku-solver.cc	/^#define REP(/;"	d	language:C++	file:
REP	summary-ranges.cc	/^#define REP(/;"	d	language:C++	file:
REP	super-ugly-number.cc	/^#define REP(/;"	d	language:C++	file:
REP	surrounded-regions.cc	/^#define REP(/;"	d	language:C++	file:
REP	target-sum.cc	/^#define REP(/;"	d	language:C++	file:
REP	the-maze.cc	/^#define REP(/;"	d	language:C++	file:
REP	total-hamming-distance.cc	/^#define REP(/;"	d	language:C++	file:
REP	trapping-rain-water-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	triangle.cc	/^#define REP(/;"	d	language:C++	file:
REP	unique-binary-search-trees-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	unique-binary-search-trees.cc	/^#define REP(/;"	d	language:C++	file:
REP	unique-paths-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	unique-paths.cc	/^#define REP(/;"	d	language:C++	file:
REP	valid-sudoku.cc	/^#define REP(/;"	d	language:C++	file:
REP	walls-and-gates.cc	/^#define REP(/;"	d	language:C++	file:
REP	word-break-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	word-ladder-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	word-ladder.cc	/^#define REP(/;"	d	language:C++	file:
REP	word-search-ii.cc	/^#define REP(/;"	d	language:C++	file:
REP	word-search.cc	/^#define REP(/;"	d	language:C++	file:
REP	zigzag-conversion.cc	/^#define REP(/;"	d	language:C++	file:
REP1	count-and-say.cc	/^#define REP1(/;"	d	language:C++	file:
REP1	count-primes.cc	/^#define REP1(/;"	d	language:C++	file:
REP1	distinct-subsequences.cc	/^#define REP1(/;"	d	language:C++	file:
REP1	maximal-rectangle.cc	/^#define REP1(/;"	d	language:C++	file:
ROF	additive-number.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	burst-balloons.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	concatenated-words.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	count-of-smaller-numbers-after-self.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	count-primes.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	create-maximum-number.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	decode-ways.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	different-ways-to-add-parentheses.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	distinct-subsequences.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	maximal-rectangle.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	next-permutation.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	ones-and-zeroes.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	palindrome-partitioning.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	pascals-triangle-ii.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	permutation-sequence.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	permutations-ii.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	product-of-array-except-self.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	remove-invalid-parentheses.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	repeated-dna-sequences.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	scramble-string.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	spiral-matrix-ii.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	spiral-matrix.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	unique-binary-search-trees-ii.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	unique-paths.cc	/^#define ROF(/;"	d	language:C++	file:
ROF	word-break-ii.cc	/^#define ROF(/;"	d	language:C++	file:
RandomizedCollection	insert-delete-getrandom-o1-duplicates-allowed.cc	/^  RandomizedCollection() {$/;"	f	language:C++	class:RandomizedCollection	file:
RandomizedCollection	insert-delete-getrandom-o1-duplicates-allowed.cc	/^class RandomizedCollection {$/;"	c	language:C++	file:
RandomizedSet	insert-delete-getrandom-o1.cc	/^  RandomizedSet() {$/;"	f	language:C++	class:RandomizedSet	file:
RandomizedSet	insert-delete-getrandom-o1.cc	/^class RandomizedSet {$/;"	c	language:C++	file:
Rank Scores	database.md	/^## Rank Scores$/;"	2	language:markdown
Rising Temperature	database.md	/^##  Rising Temperature$/;"	2	language:markdown
S	sort-transformed-array.cc	/^#define S(/;"	d	language:C++	file:
Second Highest Salary	database.md	/^## Second Highest Salary$/;"	2	language:markdown
SnakeGame	design-snake-game.cc	/^  SnakeGame(int width, int height, vector<pair<int, int>> food) {$/;"	f	language:C++	class:SnakeGame	file:
SnakeGame	design-snake-game.cc	/^class SnakeGame {$/;"	c	language:C++	file:
Solution	132-pattern.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	3sum-closest.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	3sum-smaller.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	3sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	4sum-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	4sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	add-binary.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	add-digits.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	add-strings.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	add-two-numbers.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	additive-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	alien-dictionary.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	anagrams.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	android-unlock-patterns.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	arithmetic-slices-ii-subsequence.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	arithmetic-slices.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	arranging-coins.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	assign-cookies.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	balanced-binary-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	basic-calculator-ii.cc	/^class Solution$/;"	c	language:C++	file:
Solution	basic-calculator.cc	/^class Solution$/;"	c	language:C++	file:
Solution	battleships-in-a-board.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	best-meeting-point.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	best-time-to-buy-and-sell-stock-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	best-time-to-buy-and-sell-stock-iii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	best-time-to-buy-and-sell-stock-iv.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	best-time-to-buy-and-sell-stock-with-cooldown.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	best-time-to-buy-and-sell-stock.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-inorder-traversal.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-level-order-traversal-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-level-order-traversal.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-longest-consecutive-sequence.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-maximum-path-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-paths.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-postorder-traversal.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-preorder-traversal.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-right-side-view.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-upside-down.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-vertical-order-traversal.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-tree-zigzag-level-order-traversal.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	binary-watch.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	bitwise-and-of-numbers-range.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	bomb-enemy.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	bulb-switcher.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	bulls-and-cows.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	burst-balloons.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	can-i-win.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	candy.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	climbing-stairs.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	clone-graph.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	closest-binary-search-tree-value-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	closest-binary-search-tree-value.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	coin-change.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	combination-sum-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	combination-sum-iii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	combination-sum-iv.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	combination-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	combinations.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	compare-version-numbers.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	concatenated-words.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	construct-binary-tree-from-inorder-and-postorder-traversal.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	construct-binary-tree-from-preorder-and-inorder-traversal.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	container-with-most-water.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	contains-duplicate-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	contains-duplicate-iii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	contains-duplicate.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	convert-a-number-to-hexadecimal.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	convert-sorted-array-to-binary-search-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	convert-sorted-list-to-binary-search-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	convex-polygon.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	copy-list-with-random-pointer.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	count-and-say.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	count-complete-tree-nodes.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	count-numbers-with-unique-digits.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	count-of-range-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	count-of-smaller-numbers-after-self.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	count-primes.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	count-the-repetitions.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	count-univalue-subtrees.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	counting-bits.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	course-schedule-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	course-schedule.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	create-maximum-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	decode-string.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	decode-ways.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	delete-node-in-a-linked-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	different-ways-to-add-parentheses.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	distinct-subsequences.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	divide-two-integers.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	dungeon-game.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	edit-distance.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	elimination-game.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	evaluate-division.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	evaluate-reverse-polish-notation.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	excel-sheet-column-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	excel-sheet-column-title.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	expression-add-operators.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	factor-combinations.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	factorial-trailing-zeroes.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	find-all-anagrams-in-a-string.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	find-k-pairs-with-smallest-sums.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	find-leaves-of-binary-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	find-minimum-in-rotated-sorted-array-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	find-minimum-in-rotated-sorted-array.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	find-mode-in-binary-search-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	find-peak-element.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	find-right-interval.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	find-the-celebrity.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	find-the-difference.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	find-the-duplicate-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	first-bad-version.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	first-missing-positive.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	first-unique-character-in-a-string.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	fizz-buzz.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	flatten-binary-tree-to-linked-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	flip-game-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	flip-game.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	fraction-to-recurring-decimal.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	freedom-trail.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	frog-jump.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	game-of-life.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	gas-station.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	generalized-abbreviation.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	generate-parentheses.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	graph-valid-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	gray-code.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	group-shifted-strings.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	guess-number-higher-or-lower-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	guess-number-higher-or-lower.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	h-index-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	h-index.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	hamming-distance.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	happy-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	heaters.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	house-robber-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	house-robber-iii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	house-robber.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	implement-strstr.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	increasing-subsequences.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	increasing-triplet-subsequence.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	inorder-successor-in-bst.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	insert-interval.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	insertion-sort-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	integer-break.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	integer-replacement.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	integer-to-english-words.cc	/^class Solution$/;"	c	language:C++	file:
Solution	integer-to-roman.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	interleaving-string.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	intersection-of-two-arrays-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	intersection-of-two-arrays.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	intersection-of-two-linked-lists.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	invert-binary-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	ipo.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	is-subsequence.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	island-perimeter.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	isomorphic-strings.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	jump-game-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	jump-game.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	k-th-smallest-in-lexicographical-order.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	keyboard-row.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	kth-largest-element-in-an-array.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	kth-smallest-element-in-a-bst.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	kth-smallest-element-in-a-sorted-matrix.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	largest-bst-subtree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	largest-divisible-subset.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	largest-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	largest-rectangle-in-histogram.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	length-of-last-word.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	letter-combinations-of-a-phone-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	lexicographical-numbers.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	license-key-formatting.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	line-reflection.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	linked-list-cycle-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	linked-list-cycle.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	linked-list-random-node.cc	/^  Solution(ListNode* head) {$/;"	f	language:C++	class:Solution	file:
Solution	linked-list-random-node.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	lonely-pixel-i.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	lonely-pixel-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-absolute-file-path.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-common-prefix.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-consecutive-sequence.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-increasing-path-in-a-matrix.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-increasing-subsequence.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-palindrome.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-palindromic-substring.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-repeating-character-replacement.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-substring-with-at-least-k-repeating-characters.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-substring-with-at-most-k-distinct-characters.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-substring-with-at-most-two-distinct-characters.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-substring-without-repeating-characters.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	longest-valid-parentheses.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	lowest-common-ancestor-of-a-binary-search-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	lowest-common-ancestor-of-a-binary-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	magical-string.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	majority-element-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	majority-element.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	matchsticks-to-square.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	max-consecutive-ones.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	max-points-on-a-line.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	max-sum-of-sub-matrix-no-larger-than-k.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	maximal-rectangle.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	maximal-square.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	maximum-depth-of-binary-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	maximum-gap.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	maximum-product-of-word-lengths.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	maximum-product-subarray.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	maximum-size-subarray-sum-equals-k.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	maximum-subarray.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	maximum-xor-of-two-numbers-in-an-array.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	median-of-two-sorted-arrays.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	meeting-rooms-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	meeting-rooms.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	merge-intervals.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	merge-k-sorted-lists.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	merge-sorted-array.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	merge-two-sorted-lists.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	mini-parser.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	minimum-depth-of-binary-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	minimum-height-trees.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	minimum-moves-to-equal-array-elements-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	minimum-moves-to-equal-array-elements.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	minimum-number-of-arrows-to-burst-balloons.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	minimum-path-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	minimum-size-subarray-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	minimum-window-substring.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	missing-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	missing-ranges.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	most-frequent-subtree-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	move-zeroes.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	multiply-strings.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	n-queens-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	n-queens.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	nested-list-weight-sum-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	nested-list-weight-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	next-permutation.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	nim-game.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	non-overlapping-intervals.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	nth-digit.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	number-complement.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	number-of-1-bits.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	number-of-boomerangs.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	number-of-connected-components-in-an-undirected-graph.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	number-of-digit-one.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	number-of-islands-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	number-of-islands.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	number-of-segments-in-a-string.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	odd-even-linked-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	one-edit-distance.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	ones-and-zeroes.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	optimal-account-balancing.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	pacific-atlantic-water-flow.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	paint-fence.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	paint-house-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	paint-house.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	palindrome-linked-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	palindrome-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	palindrome-pairs.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	palindrome-partitioning-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	palindrome-partitioning.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	palindrome-permutation-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	palindrome-permutation.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	partition-equal-subset-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	partition-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	pascals-triangle-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	pascals-triangle.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	patching-array.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	path-sum-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	path-sum-iii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	path-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	perfect-rectangle.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	perfect-squares.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	permutation-sequence.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	permutations-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	permutations.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	plus-one-linked-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	plus-one.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	populating-next-right-pointers-in-each-node-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	populating-next-right-pointers-in-each-node.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	power-of-four.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	power-of-three.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	power-of-two.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	powx-n.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	product-of-array-except-self.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	queue-reconstruction-by-height.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	random-pick-index.cc	/^  Solution(vector<int> nums) {$/;"	f	language:C++	class:Solution	file:
Solution	random-pick-index.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	range-addition.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	ransom-note.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	read-n-characters-given-read4-ii-call-multiple-times.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	read-n-characters-given-read4.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	rearrange-string-k-distance-apart.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reconstruct-itinerary.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reconstruct-original-digits-from-english.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	recover-binary-search-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	rectangle-area.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	regular-expression-matching.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	remove-duplicate-letters.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	remove-duplicates-from-sorted-array-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	remove-duplicates-from-sorted-array.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	remove-duplicates-from-sorted-list-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	remove-duplicates-from-sorted-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	remove-element.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	remove-invalid-parentheses.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	remove-k-digits.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	remove-linked-list-elements.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	remove-nth-node-from-end-of-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reorder-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	repeated-dna-sequences.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	repeated-substring-pattern.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	restore-ip-addresses.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reverse-bits.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reverse-integer.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reverse-linked-list-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reverse-linked-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reverse-nodes-in-k-group.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reverse-string.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reverse-vowels-of-a-string.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reverse-words-in-a-string-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	reverse-words-in-a-string.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	roman-to-integer.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	rotate-array.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	rotate-function.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	rotate-image.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	rotate-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	russian-doll-envelopes.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	same-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	scramble-string.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	search-a-2d-matrix-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	search-a-2d-matrix.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	search-for-a-range.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	search-in-rotated-sorted-array-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	search-in-rotated-sorted-array.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	search-insert-position.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	self-crossing.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sequence-reconstruction.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	set-matrix-zeroes.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	shortest-distance-from-all-buildings.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	shortest-palindrome.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	shortest-word-distance-iii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	shortest-word-distance.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	shuffle-an-array.cc	/^  Solution(vector<int> nums) : a(nums) {}$/;"	f	language:C++	class:Solution	file:
Solution	shuffle-an-array.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	simplify-path.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	single-number-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	single-number-iii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	single-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sliding-window-maximum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sliding-window-median.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	smallest-good-base.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	smallest-rectangle-enclosing-black-pixels.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sort-colors.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sort-list.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sort-transformed-array.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sparse-matrix-multiplication.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	spiral-matrix-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	spiral-matrix.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	split-array-largest-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sqrtx.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	string-to-integer-atoi.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	strobogrammatic-number-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	strobogrammatic-number-iii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	strobogrammatic-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	strong-password-checker.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	subsets-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	subsets.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	substring-with-concatenation-of-all-words.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sudoku-solver.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sum-of-left-leaves.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sum-of-two-integers.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	sum-root-to-leaf-numbers.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	summary-ranges.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	super-pow.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	super-ugly-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	surrounded-regions.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	swap-nodes-in-pairs.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	symmetric-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	target-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	teemo-attacking.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	ternary-expression-parser.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	text-justification.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	the-maze.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	the-skyline-problem.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	third-maximum-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	top-k-frequent-elements.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	total-hamming-distance.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	trapping-rain-water-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	trapping-rain-water.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	triangle.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	two-sum-ii-input-array-is-sorted.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	two-sum.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	ugly-number-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	ugly-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	unique-binary-search-trees-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	unique-binary-search-trees.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	unique-paths-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	unique-paths.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	unique-substrings-in-wraparound-string.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	utf-8-validation.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	valid-anagram.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	valid-number.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	valid-palindrome.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	valid-parentheses.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	valid-perfect-square.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	valid-sudoku.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	valid-word-abbreviation.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	valid-word-square.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	validate-binary-search-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	validate-ip-address.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	verify-preorder-sequence-in-binary-search-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	verify-preorder-serialization-of-a-binary-tree.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	walls-and-gates.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	water-and-jug-problem.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	wiggle-sort-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	wiggle-sort.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	wiggle-subsequence.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	wildcard-matching.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	word-break-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	word-break.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	word-ladder-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	word-ladder.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	word-pattern-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	word-pattern.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	word-search-ii.cc	/^  Solution() : root(new TrieNode) {}$/;"	f	language:C++	class:Solution	file:
Solution	word-search-ii.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	word-search.cc	/^class Solution {$/;"	c	language:C++	file:
Solution	zigzag-conversion.cc	/^class Solution {$/;"	c	language:C++	file:
Stack	implement-stack-using-queues.cc	/^class Stack {$/;"	c	language:C++	file:
State	regular-expression-matching.cc	/^    State() : c(-2), epsf(false), epsb(false) {}$/;"	f	language:C++	struct:Solution::State	file:
State	regular-expression-matching.cc	/^  struct State {$/;"	s	language:C++	class:Solution	file:
SummaryRanges	data-stream-as-disjoint-intervals.cc	/^  SummaryRanges() {$/;"	f	language:C++	class:SummaryRanges	file:
SummaryRanges	data-stream-as-disjoint-intervals.cc	/^class SummaryRanges {$/;"	c	language:C++	file:
Tenth Line	shell.md	/^## Tenth Line$/;"	2	language:markdown
TicTacToe	design-tic-tac-toe.cc	/^  TicTacToe(int n) : n(n), a(n, vector<int8_t>(n, 0)) {}$/;"	f	language:C++	class:TicTacToe	file:
TicTacToe	design-tic-tac-toe.cc	/^class TicTacToe {$/;"	c	language:C++	file:
Transpose File	shell.md	/^## Transpose File$/;"	2	language:markdown
Trie	implement-trie-prefix-tree.cc	/^  Trie() {$/;"	f	language:C++	class:Trie	file:
Trie	implement-trie-prefix-tree.cc	/^class Trie {$/;"	c	language:C++	file:
TrieNode	add-and-search-word-data-structure-design.cc	/^    TrieNode() : has(false) {$/;"	f	language:C++	class:WordDictionary::TrieNode	file:
TrieNode	add-and-search-word-data-structure-design.cc	/^  class TrieNode {$/;"	c	language:C++	class:WordDictionary	file:
TrieNode	implement-trie-prefix-tree.cc	/^  TrieNode() : has(false) {$/;"	f	language:C++	class:TrieNode	file:
TrieNode	implement-trie-prefix-tree.cc	/^class TrieNode {$/;"	c	language:C++	file:
TrieNode	word-search-ii.cc	/^    TrieNode() : id(-1) {$/;"	f	language:C++	class:Solution::TrieNode	file:
TrieNode	word-search-ii.cc	/^  class TrieNode {$/;"	c	language:C++	class:Solution	file:
Twitter	design-twitter.cc	/^  Twitter() {$/;"	f	language:C++	class:Twitter	file:
Twitter	design-twitter.cc	/^class Twitter {$/;"	c	language:C++	file:
TwoSum	two-sum-iii-data-structure-design.cc	/^class TwoSum {$/;"	c	language:C++	file:
U	sudoku-solver.cc	/^  int L[M], R[M], U[M], D[M], col[M], size[M], res[N*N];$/;"	m	language:C++	class:Solution	typeref:typename:int[][][]	file:
Valid Phone Numbers	shell.md	/^## Valid Phone Numbers$/;"	2	language:markdown
ValidWordAbbr	unique-word-abbreviation.cc	/^  ValidWordAbbr(vector<string> &dictionary) {$/;"	f	language:C++	class:ValidWordAbbr	file:
ValidWordAbbr	unique-word-abbreviation.cc	/^class ValidWordAbbr {$/;"	c	language:C++	file:
Vector2D	flatten-2d-vector.cc	/^  Vector2D(vector<vector<int>>& vec2d) {$/;"	f	language:C++	class:Vector2D	file:
Vector2D	flatten-2d-vector.cc	/^class Vector2D {$/;"	c	language:C++	file:
Word Frequency	shell.md	/^## Word Frequency$/;"	2	language:markdown
WordDictionary	add-and-search-word-data-structure-design.cc	/^  WordDictionary() : root(new TrieNode) {}$/;"	f	language:C++	class:WordDictionary	file:
WordDictionary	add-and-search-word-data-structure-design.cc	/^class WordDictionary {$/;"	c	language:C++	file:
WordDistance	shortest-word-distance-ii.cc	/^  WordDistance(vector<string>& words) {$/;"	f	language:C++	class:WordDistance	file:
WordDistance	shortest-word-distance-ii.cc	/^class WordDistance {$/;"	c	language:C++	file:
ZigzagIterator	zigzag-iterator.cc	/^  ZigzagIterator(vector<int>& v1, vector<int>& v2) {$/;"	f	language:C++	class:ZigzagIterator	file:
ZigzagIterator	zigzag-iterator.cc	/^class ZigzagIterator {$/;"	c	language:C++	file:
__anon22215e3e0102	meeting-rooms-ii.cc	/^    sort(intervals.begin(), intervals.end(), [](const Interval &x, const Interval &y) { return x/;"	f	language:C++	function:Solution::minMeetingRooms	file:
__anon24baee850102	graph-valid-tree.cc	/^    auto f = [&](int x) {$/;"	f	language:C++	function:Solution::validTree	file:
__anon27f4e25d0102	non-overlapping-intervals.cc	/^    sort(a.begin(), a.end(), [](const Interval& x, const Interval& y) {$/;"	f	language:C++	function:Solution::eraseOverlapIntervals	file:
__anon356057df0102	combinations.cc	/^    auto f = [&]{$/;"	f	language:C++	function:Solution::combine	file:
__anon3d9b2e950102	two-sum.cc	/^      sort(r.begin(), r.end(), [&](int x, int y) { return a[x] < a[y]; });$/;"	f	language:C++	function:Solution::twoSum	file:
__anon4afe3d2a0102	best-time-to-buy-and-sell-stock-iv.cc	/^      auto add = [&](int x) {$/;"	f	language:C++	function:Solution::maxProfit	file:
__anon53bfc7b10102	closest-binary-search-tree-value-ii.cc	/^    auto popl = [&]() {$/;"	f	language:C++	function:Solution::closestKValues	file:
__anon53bfc7b10202	closest-binary-search-tree-value-ii.cc	/^    auto popr = [&]() {$/;"	f	language:C++	function:Solution::closestKValues	file:
__anon8dd7e3930102	design-twitter.cc	/^    auto cmp = [](const pair<it, it>& x, const pair<it, it>& y) {$/;"	f	language:C++	function:Twitter::getNewsFeed	file:
__anon9d0b982e0102	find-k-pairs-with-smallest-sums.cc	/^    auto cmp = [&](const pii& x, const pii& y) {$/;"	f	language:C++	function:Solution::kSmallestPairs	file:
__anona59430ec0102	minimum-number-of-arrows-to-burst-balloons.cc	/^    sort(points.begin(), points.end(), [](const pair<int, int>& x, const pair<int, int>& y) {$/;"	f	language:C++	function:Solution::findMinArrowShots	file:
__anonab8ba78a0102	number-of-connected-components-in-an-undirected-graph.cc	/^    auto find = [&](int x) {$/;"	f	language:C++	function:Solution::countComponents	file:
__anonab8ba78a0202	number-of-connected-components-in-an-undirected-graph.cc	/^    function<void(int)> dfs = [&](int u) {$/;"	f	language:C++	function:Solution::countComponents	file:
__anonbde3dcd30102	generate-parentheses.cc	/^    auto f = [&]{$/;"	f	language:C++	function:Solution::generateParenthesis	file:
__anonc19aead90102	single-number-iii.cc	/^      accumulate(a.begin(), a.end(), 0, [=](int s, int x) { return x & k ? s ^ x : s; }),$/;"	f	language:C++	function:Solution::singleNumber	file:
__anonc19aead90202	single-number-iii.cc	/^      accumulate(a.begin(), a.end(), 0, [=](int s, int x) { return x & k ? s : s ^ x; })$/;"	f	language:C++	function:Solution::singleNumber	file:
__anonc3b6bcc10102	largest-number.cc	/^    sort(b.begin(), b.end(), [](const string &x, const string &y) {$/;"	f	language:C++	function:Solution::largestNumber	file:
__anonc6192b160102	max-points-on-a-line.cc	/^      auto f = [&](int p, int q) {$/;"	f	language:C++	function:Solution::maxPoints	file:
__anonc6192b160202	max-points-on-a-line.cc	/^        sort(pi.begin(), pi.end()-(c-1), [&](int p, int q) { return f(p, q) < 0; });$/;"	f	language:C++	function:Solution::maxPoints	file:
__anonc978a81f0102	range-addition.cc	/^    auto f = [&](int x, int y) {$/;"	f	language:C++	function:Solution::getModifiedArray	file:
__anoncf7b791f0102	meeting-rooms.cc	/^    sort(intervals.begin(), intervals.end(), [](const Interval &x, const Interval &y) {$/;"	f	language:C++	function:Solution::canAttendMeetings	file:
__anond05a82990102	line-reflection.cc	/^    sort(points.begin(), points.end(), [](const pair<int, int>& x, const pair<int, int>& y) {$/;"	f	language:C++	function:Solution::isReflected	file:
__anond2c00e7a0102	pacific-atlantic-water-flow.cc	/^    auto bfs = [&](int b) {$/;"	f	language:C++	function:Solution::pacificAtlantic	file:
__anone21e42740102	russian-doll-envelopes.cc	/^    sort(a.begin(), a.end(), [](const pair<int, int>& x, const pair<int, int>& y) {$/;"	f	language:C++	function:Solution::maxEnvelopes	file:
__anone9d665ce0102	merge-intervals.cc	/^    sort(intervals.begin(), intervals.end(), [](const Interval &x, const Interval &y) { return x/;"	f	language:C++	function:Solution::merge	file:
a	all-oone-data-structure.cc	/^  unordered_map<string, list<Bucket>::iterator> a;$/;"	m	language:C++	class:AllOne	typeref:typename:unordered_map<string,list<Bucket>::iterator>	file:
a	android-unlock-patterns.cc	/^  long a[9], r;$/;"	m	language:C++	class:Solution	typeref:typename:long[9]	file:
a	count-of-range-sum.cc	/^  vector<long> a, b;$/;"	m	language:C++	class:Solution	typeref:typename:vector<long>	file:
a	count-of-smaller-numbers-after-self.cc	/^  vector<pii> a, b;$/;"	m	language:C++	class:Solution	typeref:typename:vector<pii>	file:
a	design-phone-directory.cc	/^  vector<int> a;$/;"	m	language:C++	class:PhoneDirectory	typeref:typename:vector<int>	file:
a	design-snake-game.cc	/^  deque<pair<int, int>> a{{0, 0}};$/;"	m	language:C++	class:SnakeGame	typeref:typename:deque<pair<int,int>>	file:
a	design-tic-tac-toe.cc	/^  vector<vector<int8_t>> a;$/;"	m	language:C++	class:TicTacToe	typeref:typename:vector<vector<int8_t>>	file:
a	expression-add-operators.cc	/^  string a;$/;"	m	language:C++	class:Solution	typeref:typename:string	file:
a	find-mode-in-binary-search-tree.cc	/^  vector<int> a;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
a	implement-queue-using-stacks.cc	/^  stack<int> a, b;$/;"	m	language:C++	class:Queue	typeref:typename:stack<int>	file:
a	insert-delete-getrandom-o1-duplicates-allowed.cc	/^  vector<pair<int, decltype(m.begin())>> a;$/;"	m	language:C++	class:RandomizedCollection	typeref:typename:vector<pair<int,decltype (m.begin ())>>	file:
a	insert-delete-getrandom-o1.cc	/^  vector<int> a;$/;"	m	language:C++	class:RandomizedSet	typeref:typename:vector<int>	file:
a	letter-combinations-of-a-phone-number.cc	/^  string a;$/;"	m	language:C++	class:Solution	typeref:typename:string	file:
a	longest-increasing-path-in-a-matrix.cc	/^  vector<vector<int>> a, dp;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
a	lru-cache.cc	/^  list<pair<int, int> > a;$/;"	m	language:C++	class:LRUCache	typeref:typename:list<pair<int,int>>	file:
a	min-stack.cc	/^  stack<int> a, b;$/;"	m	language:C++	class:MinStack	typeref:typename:stack<int>	file:
a	min-stack.cc	/^  stack<unsigned> a, b;$/;"	m	language:C++	class:MinStack	typeref:typename:stack<unsigned>	file:
a	moving-average-from-data-stream.cc	/^  vector<int> a;$/;"	m	language:C++	class:MovingAverage	typeref:typename:vector<int>	file:
a	palindrome-pairs.cc	/^  string a;$/;"	m	language:C++	class:Solution	typeref:typename:string	file:
a	path-sum-ii.cc	/^  vector<int> a;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
a	random-pick-index.cc	/^  vector<int> a;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
a	range-sum-query-2d-immutable.cc	/^  vector<vector<int>> a;$/;"	m	language:C++	class:NumMatrix	typeref:typename:vector<vector<int>>	file:
a	range-sum-query-2d-mutable.cc	/^  vector<vector<int>> a;$/;"	m	language:C++	class:NumMatrix	typeref:typename:vector<vector<int>>	file:
a	range-sum-query-immutable.cc	/^  vector<int> a;$/;"	m	language:C++	class:NumArray	typeref:typename:vector<int>	file:
a	range-sum-query-mutable.cc	/^  vector<int> a;$/;"	m	language:C++	class:NumArray	typeref:typename:vector<int>	file:
a	read-n-characters-given-read4-ii-call-multiple-times.cc	/^  char a[4], *fore = a, *rear = a;$/;"	m	language:C++	class:Solution	typeref:typename:char[4]	file:
a	shortest-word-distance-ii.cc	/^  map<string, vector<int>> a;$/;"	m	language:C++	class:WordDistance	typeref:typename:map<string,vector<int>>	file:
a	shuffle-an-array.cc	/^  vector<int> a;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
a	two-sum-iii-data-structure-design.cc	/^  unordered_multiset<int> a;$/;"	m	language:C++	class:TwoSum	typeref:typename:unordered_multiset<int>	file:
add	count-of-range-sum.cc	/^  void add(vector<int> &fenwick, int n, int x) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
add	range-sum-query-2d-mutable.cc	/^  void add(int i, int j, int v) {$/;"	f	language:C++	class:NumMatrix	typeref:typename:void	file:
add	sliding-window-median.cc	/^  void add(int x, int n, int v) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
add	two-sum-iii-data-structure-design.cc	/^  void add(int number) {$/;"	f	language:C++	class:TwoSum	typeref:typename:void	file:
add-and-search-word-data-structure-design.cc	add-and-search-word-data-structure-design.cc	1;"	F	language:C++
add-binary.cc	add-binary.cc	1;"	F	language:C++
add-digits.cc	add-digits.cc	1;"	F	language:C++
add-strings.cc	add-strings.cc	1;"	F	language:C++
add-two-numbers.cc	add-two-numbers.cc	1;"	F	language:C++
addBinary	add-binary.cc	/^  string addBinary(string a, string b) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
addDigits	add-digits.cc	/^  int addDigits(int num) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
addNum	data-stream-as-disjoint-intervals.cc	/^  void addNum(int val) {$/;"	f	language:C++	class:SummaryRanges	typeref:typename:void	file:
addNum	find-median-from-data-stream.cc	/^  void addNum(int num) {$/;"	f	language:C++	class:MedianFinder	typeref:typename:void	file:
addOperators	expression-add-operators.cc	/^  vector<string> addOperators(string num, int target) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
addStrings	add-strings.cc	/^  string addStrings(string a, string b) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
addTwoNumbers	add-two-numbers.cc	/^  ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
addWord	add-and-search-word-data-structure-design.cc	/^  void addWord(string word) {$/;"	f	language:C++	class:WordDictionary	typeref:typename:void	file:
additive-number.cc	additive-number.cc	1;"	F	language:C++
adj	evaluate-division.cc	/^  unordered_map<string, vector<pair<string, double>>> adj;$/;"	m	language:C++	class:Solution	typeref:typename:unordered_map<string,vector<pair<string,double>>>	file:
alien-dictionary.cc	alien-dictionary.cc	1;"	F	language:C++
alienOrder	alien-dictionary.cc	/^  string alienOrder(vector<string>& words) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
all-oone-data-structure.cc	all-oone-data-structure.cc	1;"	F	language:C++
anagrams	anagrams.cc	/^  vector<string> anagrams(vector<string> &strs) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
anagrams.cc	anagrams.cc	1;"	F	language:C++
android-unlock-patterns.cc	android-unlock-patterns.cc	1;"	F	language:C++
ans	word-search-ii.cc	/^  vector<string> words, ans;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
arithmetic-slices-ii-subsequence.cc	arithmetic-slices-ii-subsequence.cc	1;"	F	language:C++
arithmetic-slices.cc	arithmetic-slices.cc	1;"	F	language:C++
arrangeCoins	arranging-coins.cc	/^  int arrangeCoins(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
arranging-coins.cc	arranging-coins.cc	1;"	F	language:C++
assign-cookies.cc	assign-cookies.cc	1;"	F	language:C++
atoi	string-to-integer-atoi.cc	/^  int atoi(const char *p) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
b	all-oone-data-structure.cc	/^  list<Bucket> b;$/;"	m	language:C++	class:AllOne	typeref:typename:list<Bucket>	file:
b	count-of-range-sum.cc	/^  vector<long> a, b;$/;"	m	language:C++	class:Solution	typeref:typename:vector<long>	file:
b	count-of-smaller-numbers-after-self.cc	/^  vector<pii> a, b;$/;"	m	language:C++	class:Solution	typeref:typename:vector<pii>	file:
b	create-maximum-number.cc	/^  int *b;$/;"	v	language:C++	namespace:KoAluru	typeref:typename:int *
b	implement-queue-using-stacks.cc	/^  stack<int> a, b;$/;"	m	language:C++	class:Queue	typeref:typename:stack<int>	file:
b	min-stack.cc	/^  stack<int> a, b;$/;"	m	language:C++	class:MinStack	typeref:typename:stack<int>	file:
b	min-stack.cc	/^  stack<unsigned> a, b;$/;"	m	language:C++	class:MinStack	typeref:typename:stack<unsigned>	file:
backward	expression-add-operators.cc	/^  void backward(int k, string s, ll add, ll mul, ll last, ll ten) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
backward	remove-invalid-parentheses.cc	/^  void backward(const string &s, string ss, int k, int i, int removed, bool can) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
balanced-binary-tree.cc	balanced-binary-tree.cc	1;"	F	language:C++
basic-calculator-ii.cc	basic-calculator-ii.cc	1;"	F	language:C++
basic-calculator.cc	basic-calculator.cc	1;"	F	language:C++
battleships-in-a-board.cc	battleships-in-a-board.cc	1;"	F	language:C++
best-meeting-point.cc	best-meeting-point.cc	1;"	F	language:C++
best-time-to-buy-and-sell-stock-ii.cc	best-time-to-buy-and-sell-stock-ii.cc	1;"	F	language:C++
best-time-to-buy-and-sell-stock-iii.cc	best-time-to-buy-and-sell-stock-iii.cc	1;"	F	language:C++
best-time-to-buy-and-sell-stock-iv.cc	best-time-to-buy-and-sell-stock-iv.cc	1;"	F	language:C++
best-time-to-buy-and-sell-stock-with-cooldown.cc	best-time-to-buy-and-sell-stock-with-cooldown.cc	1;"	F	language:C++
best-time-to-buy-and-sell-stock.cc	best-time-to-buy-and-sell-stock.cc	1;"	F	language:C++
bfs	minimum-height-trees.cc	/^  int bfs(int u) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
binary-search-tree-iterator.cc	binary-search-tree-iterator.cc	1;"	F	language:C++
binary-tree-inorder-traversal.cc	binary-tree-inorder-traversal.cc	1;"	F	language:C++
binary-tree-level-order-traversal-ii.cc	binary-tree-level-order-traversal-ii.cc	1;"	F	language:C++
binary-tree-level-order-traversal.cc	binary-tree-level-order-traversal.cc	1;"	F	language:C++
binary-tree-longest-consecutive-sequence.cc	binary-tree-longest-consecutive-sequence.cc	1;"	F	language:C++
binary-tree-maximum-path-sum.cc	binary-tree-maximum-path-sum.cc	1;"	F	language:C++
binary-tree-paths.cc	binary-tree-paths.cc	1;"	F	language:C++
binary-tree-postorder-traversal.cc	binary-tree-postorder-traversal.cc	1;"	F	language:C++
binary-tree-preorder-traversal.cc	binary-tree-preorder-traversal.cc	1;"	F	language:C++
binary-tree-right-side-view.cc	binary-tree-right-side-view.cc	1;"	F	language:C++
binary-tree-upside-down.cc	binary-tree-upside-down.cc	1;"	F	language:C++
binary-tree-vertical-order-traversal.cc	binary-tree-vertical-order-traversal.cc	1;"	F	language:C++
binary-tree-zigzag-level-order-traversal.cc	binary-tree-zigzag-level-order-traversal.cc	1;"	F	language:C++
binary-watch.cc	binary-watch.cc	1;"	F	language:C++
binaryTreePaths	binary-tree-paths.cc	/^  vector<string> binaryTreePaths(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
bitwise-and-of-numbers-range.cc	bitwise-and-of-numbers-range.cc	1;"	F	language:C++
board	word-search-ii.cc	/^  vector<vector<char>> board;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<char>>	file:
bomb-enemy.cc	bomb-enemy.cc	1;"	F	language:C++
bucket	create-maximum-number.cc	/^  void bucket(T a[], int n, int k, bool end)$/;"	f	language:C++	namespace:KoAluru	typeref:typename:void
buildTree	construct-binary-tree-from-inorder-and-postorder-traversal.cc	/^  TreeNode *buildTree(vector<int> &inorder, vector<int> &postorder) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
buildTree	construct-binary-tree-from-preorder-and-inorder-traversal.cc	/^  TreeNode *buildTree(vector<int> &preorder, vector<int> &inorder) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
bulb-switcher.cc	bulb-switcher.cc	1;"	F	language:C++
bulbSwitch	bulb-switcher.cc	/^  int bulbSwitch(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
bulls-and-cows.cc	bulls-and-cows.cc	1;"	F	language:C++
burst-balloons.cc	burst-balloons.cc	1;"	F	language:C++
c	add-and-search-word-data-structure-design.cc	/^    TrieNode *c[26];$/;"	m	language:C++	class:WordDictionary::TrieNode	typeref:typename:TrieNode * [26]	file:
c	count-of-smaller-numbers-after-self.cc	/^  vector<int> c;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
c	implement-trie-prefix-tree.cc	/^  TrieNode *c[26];$/;"	m	language:C++	class:TrieNode	typeref:typename:TrieNode * [26]	file:
c	lru-cache.cc	/^  int c;$/;"	m	language:C++	class:LRUCache	typeref:typename:int	file:
c	most-frequent-subtree-sum.cc	/^  unordered_map<int, int> c;$/;"	m	language:C++	class:Solution	typeref:typename:unordered_map<int,int>	file:
c	n-queens-ii.cc	/^  int c, n;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
c	n-queens.cc	/^  int c, n;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
c	regular-expression-matching.cc	/^    int c;$/;"	m	language:C++	struct:Solution::State	typeref:typename:int	file:
c	word-search-ii.cc	/^    TrieNode *c[26];$/;"	m	language:C++	class:Solution::TrieNode	typeref:typename:TrieNode * [26]	file:
calcEquation	evaluate-division.cc	/^  vector<double> calcEquation(vector<pair<string, string>> equations, vector<double>& values, ve/;"	f	language:C++	class:Solution	typeref:typename:vector<double>	file:
calculate	basic-calculator-ii.cc	/^  int calculate(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
calculate	basic-calculator.cc	/^  int calculate(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
calculateMinimumHP	dungeon-game.cc	/^  int calculateMinimumHP(vector<vector<int> > &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
can-i-win.cc	can-i-win.cc	1;"	F	language:C++
canAttendMeetings	meeting-rooms.cc	/^  bool canAttendMeetings(vector<Interval>& intervals) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
canCompleteCircuit	gas-station.cc	/^  int canCompleteCircuit(vector<int> &gas, vector<int> &cost) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
canConstruct	ransom-note.cc	/^  bool canConstruct(string ransomNote, string magazine) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
canCross	frog-jump.cc	/^  bool canCross(vector<int>& stones) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
canFinish	course-schedule.cc	/^  bool canFinish(int n, vector<vector<int>> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
canIWin	can-i-win.cc	/^  bool canIWin(int maxChoosableInteger, int desiredTotal) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
canJump	jump-game.cc	/^  bool canJump(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
canMeasureWater	water-and-jug-problem.cc	/^  bool canMeasureWater(int x, int y, int z) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
canPartition	partition-equal-subset-sum.cc	/^  bool canPartition(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
canPermutePalindrome	palindrome-permutation.cc	/^  bool canPermutePalindrome(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
canWin	flip-game-ii.cc	/^  bool canWin(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
canWinNim	nim-game.cc	/^  bool canWinNim(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
candy	candy.cc	/^  int candy(vector<int> &ratings) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
candy.cc	candy.cc	1;"	F	language:C++
characterReplacement	longest-repeating-character-replacement.cc	/^  int characterReplacement(string s, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
check	design-phone-directory.cc	/^  bool check(int number) {$/;"	f	language:C++	class:PhoneDirectory	typeref:typename:bool	file:
climbStairs	climbing-stairs.cc	/^  int climbStairs(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
climbing-stairs.cc	climbing-stairs.cc	1;"	F	language:C++
clone-graph.cc	clone-graph.cc	1;"	F	language:C++
cloneGraph	clone-graph.cc	/^  UndirectedGraphNode *cloneGraph(UndirectedGraphNode *node) {$/;"	f	language:C++	class:Solution	typeref:typename:UndirectedGraphNode *	file:
closest-binary-search-tree-value-ii.cc	closest-binary-search-tree-value-ii.cc	1;"	F	language:C++
closest-binary-search-tree-value.cc	closest-binary-search-tree-value.cc	1;"	F	language:C++
closestKValues	closest-binary-search-tree-value-ii.cc	/^  vector<int> closestKValues(TreeNode* root, double target, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
closestValue	closest-binary-search-tree-value.cc	/^  int closestValue(TreeNode *x, double target) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
coin-change.cc	coin-change.cc	1;"	F	language:C++
coinChange	coin-change.cc	/^  int coinChange(vector<int>& coins, int amount) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
col	sudoku-solver.cc	/^  int L[M], R[M], U[M], D[M], col[M], size[M], res[N*N];$/;"	m	language:C++	class:Solution	typeref:typename:int[][][][][]	file:
column	smallest-rectangle-enclosing-black-pixels.cc	/^  int column(vector<vector<char>> &a, int l, int h, bool flag) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
combination-sum-ii.cc	combination-sum-ii.cc	1;"	F	language:C++
combination-sum-iii.cc	combination-sum-iii.cc	1;"	F	language:C++
combination-sum-iv.cc	combination-sum-iv.cc	1;"	F	language:C++
combination-sum.cc	combination-sum.cc	1;"	F	language:C++
combinationSum	combination-sum.cc	/^  vector<vector<int> > combinationSum(vector<int> &a, int s) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
combinationSum2	combination-sum-ii.cc	/^  vector<vector<int> > combinationSum2(vector<int> &a, int s) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
combinationSum3	combination-sum-iii.cc	/^  vector<vector<int>> combinationSum3(int k, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
combinationSum4	combination-sum-iv.cc	/^  int combinationSum4(vector<int>& nums, int target) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
combinations.cc	combinations.cc	1;"	F	language:C++
combine	combinations.cc	/^  vector<vector<int> > combine(int n, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
compare-version-numbers.cc	compare-version-numbers.cc	1;"	F	language:C++
compareVersion	compare-version-numbers.cc	/^  int compareVersion(string a, string b) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
computeArea	rectangle-area.cc	/^  int computeArea(int A, int B, int C, int D, int E, int F, int G, int H) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
concatenated-words.cc	concatenated-words.cc	1;"	F	language:C++
connect	populating-next-right-pointers-in-each-node-ii.cc	/^  void connect(TreeLinkNode *p) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
connect	populating-next-right-pointers-in-each-node.cc	/^  void connect(TreeLinkNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
construct-binary-tree-from-inorder-and-postorder-traversal.cc	construct-binary-tree-from-inorder-and-postorder-traversal.cc	1;"	F	language:C++
construct-binary-tree-from-preorder-and-inorder-traversal.cc	construct-binary-tree-from-preorder-and-inorder-traversal.cc	1;"	F	language:C++
container-with-most-water.cc	container-with-most-water.cc	1;"	F	language:C++
contains-duplicate-ii.cc	contains-duplicate-ii.cc	1;"	F	language:C++
contains-duplicate-iii.cc	contains-duplicate-iii.cc	1;"	F	language:C++
contains-duplicate.cc	contains-duplicate.cc	1;"	F	language:C++
containsDuplicate	contains-duplicate.cc	/^  bool containsDuplicate(vector<int>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
containsNearbyAlmostDuplicate	contains-duplicate-iii.cc	/^  bool containsNearbyAlmostDuplicate(vector<int> &a, int k, int t) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
containsNearbyDuplicate	contains-duplicate-ii.cc	/^  bool containsNearbyDuplicate(vector<int>& a, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
convert	zigzag-conversion.cc	/^  string convert(string s, int nRows) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
convert-a-number-to-hexadecimal.cc	convert-a-number-to-hexadecimal.cc	1;"	F	language:C++
convert-sorted-array-to-binary-search-tree.cc	convert-sorted-array-to-binary-search-tree.cc	1;"	F	language:C++
convert-sorted-list-to-binary-search-tree.cc	convert-sorted-list-to-binary-search-tree.cc	1;"	F	language:C++
convertToTitle	excel-sheet-column-title.cc	/^  string convertToTitle(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
convex-polygon.cc	convex-polygon.cc	1;"	F	language:C++
copy-list-with-random-pointer.cc	copy-list-with-random-pointer.cc	1;"	F	language:C++
copyRandomList	copy-list-with-random-pointer.cc	/^  RandomListNode *copyRandomList(RandomListNode *head) {$/;"	f	language:C++	class:Solution	typeref:typename:RandomListNode *	file:
count-and-say.cc	count-and-say.cc	1;"	F	language:C++
count-complete-tree-nodes.cc	count-complete-tree-nodes.cc	1;"	F	language:C++
count-numbers-with-unique-digits.cc	count-numbers-with-unique-digits.cc	1;"	F	language:C++
count-of-range-sum.cc	count-of-range-sum.cc	1;"	F	language:C++
count-of-smaller-numbers-after-self.cc	count-of-smaller-numbers-after-self.cc	1;"	F	language:C++
count-primes.cc	count-primes.cc	1;"	F	language:C++
count-the-repetitions.cc	count-the-repetitions.cc	1;"	F	language:C++
count-univalue-subtrees.cc	count-univalue-subtrees.cc	1;"	F	language:C++
countAndSay	count-and-say.cc	/^  string countAndSay(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
countBattleships	battleships-in-a-board.cc	/^  int countBattleships(vector<vector<char>>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
countBits	counting-bits.cc	/^  vector<int> countBits(int num) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
countComponents	number-of-connected-components-in-an-undirected-graph.cc	/^  int countComponents(int n, vector<pair<int, int>>& edges) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
countDigitOne	number-of-digit-one.cc	/^  int countDigitOne(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
countNodes	count-complete-tree-nodes.cc	/^  int countNodes(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
countNodes	count-complete-tree-nodes.cc	/^  int countNodes(TreeNode* root) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
countNumbersWithUniqueDigits	count-numbers-with-unique-digits.cc	/^  int countNumbersWithUniqueDigits(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
countPrimes	count-primes.cc	/^  int countPrimes(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
countRangeSum	count-of-range-sum.cc	/^  int countRangeSum(vector<int>& nums, int lower, int upper) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
countSegments	number-of-segments-in-a-string.cc	/^  int countSegments(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
countSmaller	count-of-smaller-numbers-after-self.cc	/^  vector<int> countSmaller(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
countUnivalSubtrees	count-univalue-subtrees.cc	/^  int countUnivalSubtrees(TreeNode *x) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
counting-bits.cc	counting-bits.cc	1;"	F	language:C++
course-schedule-ii.cc	course-schedule-ii.cc	1;"	F	language:C++
course-schedule.cc	course-schedule.cc	1;"	F	language:C++
cover	sudoku-solver.cc	/^  void cover(int c) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
create-maximum-number.cc	create-maximum-number.cc	1;"	F	language:C++
d	min-stack.cc	/^  unsigned s, d;$/;"	m	language:C++	class:MinStack	typeref:typename:unsigned	file:
d	word-ladder-ii.cc	/^  vector<int> d, dd;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
data	peeking-iterator.cc	/^  Data* data;$/;"	m	language:C++	class:Iterator	typeref:typename:Data *	file:
data-stream-as-disjoint-intervals.cc	data-stream-as-disjoint-intervals.cc	1;"	F	language:C++
database.md	database.md	1;"	F	language:markdown
dd	word-ladder-ii.cc	/^  vector<int> d, dd;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
dec	all-oone-data-structure.cc	/^  void dec(string key) {$/;"	f	language:C++	class:AllOne	typeref:typename:void	file:
decode	encode-and-decode-strings.cc	/^  vector<string> decode(string s) {$/;"	f	language:C++	class:Codec	typeref:typename:vector<string>	file:
decode	serialize-and-deserialize-binary-tree.cc	/^  TreeNode *decode(istringstream &ss) {$/;"	f	language:C++	class:Codec	typeref:typename:TreeNode *	file:
decode-string.cc	decode-string.cc	1;"	F	language:C++
decode-ways.cc	decode-ways.cc	1;"	F	language:C++
decodeString	decode-string.cc	/^  string decodeString(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
delete-node-in-a-linked-list.cc	delete-node-in-a-linked-list.cc	1;"	F	language:C++
deleteDuplicates	remove-duplicates-from-sorted-list-ii.cc	/^  ListNode *deleteDuplicates(ListNode *head) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
deleteDuplicates	remove-duplicates-from-sorted-list.cc	/^  ListNode *deleteDuplicates(ListNode *head) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
deleteNode	delete-node-in-a-linked-list.cc	/^  void deleteNode(ListNode *x) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
deleteNode	delete-node-in-a-linked-list.cc	/^  void deleteNode(ListNode* x) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
depthSum	nested-list-weight-sum.cc	/^  int depthSum(vector<NestedInteger>& nestedList) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
depthSumInverse	nested-list-weight-sum-ii.cc	/^  int depthSumInverse(vector<NestedInteger>& nestedList) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
deserialize	mini-parser.cc	/^  NestedInteger deserialize(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:NestedInteger	file:
deserialize	serialize-and-deserialize-binary-tree.cc	/^  TreeNode* deserialize(string data) {$/;"	f	language:C++	class:Codec	typeref:typename:TreeNode *	file:
design-hit-counter.cc	design-hit-counter.cc	1;"	F	language:C++
design-phone-directory.cc	design-phone-directory.cc	1;"	F	language:C++
design-snake-game.cc	design-snake-game.cc	1;"	F	language:C++
design-tic-tac-toe.cc	design-tic-tac-toe.cc	1;"	F	language:C++
design-twitter.cc	design-twitter.cc	1;"	F	language:C++
detectCycle	linked-list-cycle-ii.cc	/^  ListNode *detectCycle(ListNode *head) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
dfs	evaluate-division.cc	/^  void dfs(string u, int b, double g) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
dfs	longest-increasing-path-in-a-matrix.cc	/^  int dfs(int i, int j) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
diagonal	design-tic-tac-toe.cc	/^  bool diagonal(int row, int col) {$/;"	f	language:C++	class:TicTacToe	typeref:typename:bool	file:
dic	word-ladder-ii.cc	/^  vector<string> dic;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
diffWaysToCompute	different-ways-to-add-parentheses.cc	/^  vector<int> diffWaysToCompute(string input) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
different-ways-to-add-parentheses.cc	different-ways-to-add-parentheses.cc	1;"	F	language:C++
distinct-subsequences.cc	distinct-subsequences.cc	1;"	F	language:C++
divide	divide-two-integers.cc	/^  int divide(int p, int q) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
divide-two-integers.cc	divide-two-integers.cc	1;"	F	language:C++
dlx	sudoku-solver.cc	/^  bool dlx(vector<vector<char> > &a) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
dp	longest-increasing-path-in-a-matrix.cc	/^  vector<vector<int>> a, dp;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
dungeon-game.cc	dungeon-game.cc	1;"	F	language:C++
e_minus	expression-add-operators.cc	/^  vector<multimap<ll, string>> e_plus, e_minus;$/;"	m	language:C++	class:Solution	typeref:typename:vector<multimap<ll,string>>	file:
e_plus	expression-add-operators.cc	/^  vector<multimap<ll, string>> e_plus, e_minus;$/;"	m	language:C++	class:Solution	typeref:typename:vector<multimap<ll,string>>	file:
edit-distance.cc	edit-distance.cc	1;"	F	language:C++
elimination-game.cc	elimination-game.cc	1;"	F	language:C++
empty	implement-queue-using-stacks.cc	/^  bool empty(void) {$/;"	f	language:C++	class:Queue	typeref:typename:bool	file:
empty	implement-stack-using-queues.cc	/^  bool empty() {$/;"	f	language:C++	class:Stack	typeref:typename:bool	file:
empty	read-n-characters-given-read4-ii-call-multiple-times.cc	/^  bool empty = false;$/;"	m	language:C++	class:Solution	typeref:typename:bool	file:
encode	encode-and-decode-strings.cc	/^  string encode(vector<string>& strs) {$/;"	f	language:C++	class:Codec	typeref:typename:string	file:
encode	serialize-and-deserialize-binary-tree.cc	/^  void encode(TreeNode *x, string &s) {$/;"	f	language:C++	class:Codec	typeref:typename:void	file:
encode-and-decode-strings.cc	encode-and-decode-strings.cc	1;"	F	language:C++
epsb	regular-expression-matching.cc	/^    bool epsf, epsb;$/;"	m	language:C++	struct:Solution::State	typeref:typename:bool	file:
epsf	regular-expression-matching.cc	/^    bool epsf, epsb;$/;"	m	language:C++	struct:Solution::State	typeref:typename:bool	file:
eraseOverlapIntervals	non-overlapping-intervals.cc	/^  int eraseOverlapIntervals(vector<Interval>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
es	minimum-height-trees.cc	/^  vector<vector<int>> es;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
evalRPN	evaluate-reverse-polish-notation.cc	/^  int evalRPN(vector<string> &tokens) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
evaluate-division.cc	evaluate-division.cc	1;"	F	language:C++
evaluate-reverse-polish-notation.cc	evaluate-reverse-polish-notation.cc	1;"	F	language:C++
excel-sheet-column-number.cc	excel-sheet-column-number.cc	1;"	F	language:C++
excel-sheet-column-title.cc	excel-sheet-column-title.cc	1;"	F	language:C++
exist	word-search.cc	/^  bool exist(vector<vector<char> > &board, string word) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
expression-add-operators.cc	expression-add-operators.cc	1;"	F	language:C++
f	binary-tree-longest-consecutive-sequence.cc	/^  pair<int, int> f(TreeNode *x) {$/;"	f	language:C++	class:Solution	typeref:typename:pair<int,int>	file:
f	binary-tree-maximum-path-sum.cc	/^  int f(TreeNode *p, int &ans, int &mx) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
f	binary-tree-paths.cc	/^  void f(TreeNode *x, string s) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	can-i-win.cc	/^  bool f(int s, int m) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
f	combination-sum-ii.cc	/^  void f(vector<vector<int>> &r, vector<int> &rr, vector<int> &a, int i, int s) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	combination-sum-iii.cc	/^  void f(int k, int n, vector<int> &a, vector<vector<int>> &r) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	combination-sum.cc	/^  void f(vector<vector<int>> &r, vector<int> &rr, vector<int> &a, int i, int s) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	construct-binary-tree-from-inorder-and-postorder-traversal.cc	/^  TreeNode *f(int *l, int *h, int *ll, int *hh) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
f	construct-binary-tree-from-preorder-and-inorder-traversal.cc	/^  TreeNode *f(int *l, int *h, int *ll, int *hh) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
f	convert-sorted-array-to-binary-search-tree.cc	/^  TreeNode *f(vector<int> &a, int l, int h) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
f	convert-sorted-list-to-binary-search-tree.cc	/^  TreeNode *f(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
f	count-and-say.cc	/^  string f(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
f	count-complete-tree-nodes.cc	/^  int f(TreeNode *x) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
f	count-of-range-sum.cc	/^  int f(int l, int h) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
f	count-of-smaller-numbers-after-self.cc	/^  void f(int l, int r) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	count-univalue-subtrees.cc	/^  bool f(TreeNode *x, int &r) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
f	decode-string.cc	/^  string f(int& i, string s) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
f	factor-combinations.cc	/^  void f(int n, int k, vector<int> &a, vector<vector<int>> &r) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	find-leaves-of-binary-tree.cc	/^  int f(TreeNode* x) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
f	find-mode-in-binary-search-tree.cc	/^  void f(TreeNode* x) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	generalized-abbreviation.cc	/^  void f(int i, bool c, const string &word, string w) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	group-shifted-strings.cc	/^  string f(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
f	house-robber-iii.cc	/^  pair<int, int> f(TreeNode *x) {$/;"	f	language:C++	class:Solution	typeref:typename:pair<int,int>	file:
f	implement-queue-using-stacks.cc	/^  void f() {$/;"	f	language:C++	class:Queue	typeref:typename:void	file:
f	integer-to-english-words.cc	/^  string f(int x, int i, int v[], string n[]) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
f	letter-combinations-of-a-phone-number.cc	/^  void f(int k, string xs, vector<string> &r) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	longest-substring-with-at-least-k-repeating-characters.cc	/^  int f(const string& s, int l, int r, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
f	missing-ranges.cc	/^  string f(int l, int u) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
f	most-frequent-subtree-sum.cc	/^  int f(TreeNode* x) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
f	n-queens-ii.cc	/^  void f(int i, int l, int m, int r) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	n-queens.cc	/^  void f(int i, int l, int m, int r) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	nested-list-weight-sum-ii.cc	/^  pair<int, int> f(const vector<NestedInteger>& xs) {$/;"	f	language:C++	class:Solution	typeref:typename:pair<int,int>	file:
f	nested-list-weight-sum.cc	/^  int f(const vector<NestedInteger> &xs) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
f	palindrome-partitioning.cc	/^  vector<vector<bool>> f;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<bool>>	file:
f	path-sum-ii.cc	/^  void f(TreeNode *x, int s) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	path-sum-iii.cc	/^  void f(TreeNode* x, int s) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	peeking-iterator.cc	/^  bool f;$/;"	m	language:C++	class:PeekingIterator	typeref:typename:bool	file:
f	permutations-ii.cc	/^  bool f(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
f	permutations.cc	/^  void f(vector<int> &a, int i) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	remove-invalid-parentheses.cc	/^  void f(const string &s, string ss, int k, int left, int right, int state) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	restore-ip-addresses.cc	/^  bool f(string &s, int i, int j) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
f	roman-to-integer.cc	/^  int f(char c) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
f	search-a-2d-matrix-ii.cc	/^  bool f(vector<vector<int>> &a, int u, int uu, int v, int vv, int x) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
f	strobogrammatic-number-ii.cc	/^  void f(int i, int j, string &s, vector<string> &r) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	strobogrammatic-number-iii.cc	/^  int f(string high, bool inclusive) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
f	sum-of-left-leaves.cc	/^  int f(TreeNode* x, int left) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
f	sum-root-to-leaf-numbers.cc	/^  int f(TreeNode *x, int d) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
f	surrounded-regions.cc	/^#defi/;"	d	language:C++	file:
f	symmetric-tree.cc	/^  bool f(TreeNode *x, TreeNode *y) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
f	ternary-expression-parser.cc	/^  string f(string& e, int& i) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
f	unique-word-abbreviation.cc	/^  string f(const string &w) const {$/;"	f	language:C++	class:ValidWordAbbr	typeref:typename:string	file:
f	valid-number.cc	/^  bool f(string s, bool f) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
f	validate-binary-search-tree.cc	/^  bool f(TreeNode *x, TreeNode *l, TreeNode *h) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
f	validate-binary-search-tree.cc	/^  bool f(TreeNode *x, long l, long h) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
f	word-break-ii.cc	/^  vector<vector<bool>> f;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<bool>>	file:
f	word-ladder-ii.cc	/^  void f(int src, int sink, const vector<vector<int>> &g, vector<int> &d) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	word-pattern-ii.cc	/^  bool f(int i, int j, int b) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
f	word-search-ii.cc	/^  void f(int i, int j, TrieNode *x) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
f	word-search.cc	/^  bool f(vector<vector<char> > &a, int x, int y, const char *p) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
factor-combinations.cc	factor-combinations.cc	1;"	F	language:C++
factorial-trailing-zeroes.cc	factorial-trailing-zeroes.cc	1;"	F	language:C++
fenwick	sliding-window-median.cc	/^  vector<int> fenwick;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
ff	word-ladder-ii.cc	/^  void ff(int s, int t, int x, vector<string> &r, vector<vector<string>> &rr) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
find	number-of-islands-ii.cc	/^  int find(vector<int> &djs, int x) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
find	two-sum-iii-data-structure-design.cc	/^  bool find(int value) {$/;"	f	language:C++	class:TwoSum	typeref:typename:bool	file:
find-all-anagrams-in-a-string.cc	find-all-anagrams-in-a-string.cc	1;"	F	language:C++
find-k-pairs-with-smallest-sums.cc	find-k-pairs-with-smallest-sums.cc	1;"	F	language:C++
find-leaves-of-binary-tree.cc	find-leaves-of-binary-tree.cc	1;"	F	language:C++
find-median-from-data-stream.cc	find-median-from-data-stream.cc	1;"	F	language:C++
find-minimum-in-rotated-sorted-array-ii.cc	find-minimum-in-rotated-sorted-array-ii.cc	1;"	F	language:C++
find-minimum-in-rotated-sorted-array.cc	find-minimum-in-rotated-sorted-array.cc	1;"	F	language:C++
find-mode-in-binary-search-tree.cc	find-mode-in-binary-search-tree.cc	1;"	F	language:C++
find-peak-element.cc	find-peak-element.cc	1;"	F	language:C++
find-right-interval.cc	find-right-interval.cc	1;"	F	language:C++
find-the-celebrity.cc	find-the-celebrity.cc	1;"	F	language:C++
find-the-difference.cc	find-the-difference.cc	1;"	F	language:C++
find-the-duplicate-number.cc	find-the-duplicate-number.cc	1;"	F	language:C++
find132pattern	132-pattern.cc	/^  bool find132pattern(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
findAllConcatenatedWordsInADict	concatenated-words.cc	/^  vector<string> findAllConcatenatedWordsInADict(vector<string>& words) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
findAnagrams	find-all-anagrams-in-a-string.cc	/^  vector<int> findAnagrams(string s, string p) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
findBlackPixel	lonely-pixel-ii.cc	/^  int findBlackPixel(vector<vector<char>>& a, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findCelebrity	find-the-celebrity.cc	/^  int findCelebrity(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findComplement	number-complement.cc	/^  int findComplement(int num) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findContentChildren	assign-cookies.cc	/^  int findContentChildren(vector<int>& g, vector<int>& s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findDuplicate	find-the-duplicate-number.cc	/^  int findDuplicate(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findFrequentTreeSum	most-frequent-subtree-sum.cc	/^  vector<int> findFrequentTreeSum(TreeNode* root) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
findItinerary	reconstruct-itinerary.cc	/^  vector<string> findItinerary(vector<pair<string, string>> tickets) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
findKthLargest	kth-largest-element-in-an-array.cc	/^  int findKthLargest(vector<int>& a, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findKthNumber	k-th-smallest-in-lexicographical-order.cc	/^  int findKthNumber(int n, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findLadders	word-ladder-ii.cc	/^  vector<vector<string>> findLadders(string start, string end, unordered_set<string> &dict) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<string>>	file:
findLeaves	find-leaves-of-binary-tree.cc	/^  vector<vector<int>> findLeaves(TreeNode* root) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
findLonelyPixel	lonely-pixel-i.cc	/^  int findLonelyPixel(vector<vector<char>>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findMaxConsecutiveOnes	max-consecutive-ones.cc	/^  int findMaxConsecutiveOnes(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findMaxForm	ones-and-zeroes.cc	/^  int findMaxForm(vector<string>& strs, int m, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findMaximizedCapital	ipo.cc	/^  int findMaximizedCapital(int k, int W, vector<int>& Profits, vector<int>& Capital) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findMaximumXOR	maximum-xor-of-two-numbers-in-an-array.cc	/^  int findMaximumXOR(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findMedian	find-median-from-data-stream.cc	/^  double findMedian() {$/;"	f	language:C++	class:MedianFinder	typeref:typename:double	file:
findMedianSortedArrays	median-of-two-sorted-arrays.cc	/^    double findMedianSortedArrays(vector<int> &a, vector<int> &b) {$/;"	f	language:C++	class:Solution	typeref:typename:double	file:
findMin	find-minimum-in-rotated-sorted-array-ii.cc	/^  int findMin(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findMin	find-minimum-in-rotated-sorted-array.cc	/^  int findMin(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findMinArrowShots	minimum-number-of-arrows-to-burst-balloons.cc	/^  int findMinArrowShots(vector<pair<int, int>>& points) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findMinHeightTrees	minimum-height-trees.cc	/^  vector<int> findMinHeightTrees(int n, vector<pair<int, int>>& edges) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
findMissingRanges	missing-ranges.cc	/^  vector<string> findMissingRanges(vector<int> &a, int l, int u) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
findMode	find-mode-in-binary-search-tree.cc	/^  vector<int> findMode(TreeNode* root) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
findNthDigit	nth-digit.cc	/^  int findNthDigit(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findOrder	course-schedule-ii.cc	/^  vector<int> findOrder(int n, vector<pair<int, int>>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
findPeakElement	find-peak-element.cc	/^  int findPeakElement(const vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findPeakElement	find-peak-element.cc	/^  int findPeakElement(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findPoisonedDuration	teemo-attacking.cc	/^  int findPoisonedDuration(vector<int>& a, int d) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findRadius	heaters.cc	/^  int findRadius(vector<int>& houses, vector<int>& heaters) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findRepeatedDnaSequences	repeated-dna-sequences.cc	/^  vector<string> findRepeatedDnaSequences(string a) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
findRightInterval	find-right-interval.cc	/^  vector<int> findRightInterval(vector<Interval>& intervals) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
findRotateSteps	freedom-trail.cc	/^  int findRotateSteps(string ring, string key) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findShortestWay	the-maze.cc	/^  string findShortestWay(vector<vector<int>>& maze, vector<int>& ball, vector<int>& hole) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
findStrobogrammatic	strobogrammatic-number-ii.cc	/^  vector<string> findStrobogrammatic(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
findSubsequences	increasing-subsequences.cc	/^  vector<vector<int>> findSubsequences(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
findSubstring	substring-with-concatenation-of-all-words.cc	/^  vector<int> findSubstring(string S, vector<string> &L) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
findSubstringInWraproundString	unique-substrings-in-wraparound-string.cc	/^  int findSubstringInWraproundString(string p) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findTargetSumWays	target-sum.cc	/^  int findTargetSumWays(vector<int>& nums, int S) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
findTheDifference	find-the-difference.cc	/^  char findTheDifference(string s, string t) {$/;"	f	language:C++	class:Solution	typeref:typename:char	file:
findWords	keyboard-row.cc	/^  vector<string> findWords(vector<string>& words) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
findWords	word-search-ii.cc	/^  vector<string> findWords(vector<vector<char>> &board, vector<string> &words) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
first-bad-version.cc	first-bad-version.cc	1;"	F	language:C++
first-missing-positive.cc	first-missing-positive.cc	1;"	F	language:C++
first-unique-character-in-a-string.cc	first-unique-character-in-a-string.cc	1;"	F	language:C++
firstBadVersion	first-bad-version.cc	/^  int firstBadVersion(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
firstMissingPositive	first-missing-positive.cc	/^  int firstMissingPositive(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
firstUniqChar	first-unique-character-in-a-string.cc	/^  int firstUniqChar(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
fizz-buzz.cc	fizz-buzz.cc	1;"	F	language:C++
fizzBuzz	fizz-buzz.cc	/^  vector<string> fizzBuzz(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
flatten	flatten-binary-tree-to-linked-list.cc	/^  void flatten(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
flatten-2d-vector.cc	flatten-2d-vector.cc	1;"	F	language:C++
flatten-binary-tree-to-linked-list.cc	flatten-binary-tree-to-linked-list.cc	1;"	F	language:C++
flatten-nested-list-iterator.cc	flatten-nested-list-iterator.cc	1;"	F	language:C++
flip-game-ii.cc	flip-game-ii.cc	1;"	F	language:C++
flip-game.cc	flip-game.cc	1;"	F	language:C++
follow	design-twitter.cc	/^  void follow(int followerId, int followeeId) {$/;"	f	language:C++	class:Twitter	typeref:typename:void	file:
follows	design-twitter.cc	/^  unordered_map<int, unordered_set<int>> follows;$/;"	m	language:C++	class:Twitter	typeref:typename:unordered_map<int,unordered_set<int>>	file:
food	design-snake-game.cc	/^  vector<pair<int, int>> food;$/;"	m	language:C++	class:SnakeGame	typeref:typename:vector<pair<int,int>>	file:
fore	read-n-characters-given-read4-ii-call-multiple-times.cc	/^  char a[4], *fore = a, *rear = a;$/;"	m	language:C++	class:Solution	typeref:typename:char[4]*	file:
forward	expression-add-operators.cc	/^  void forward(int k, string s, ll add, ll mul, ll last) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
forward	remove-invalid-parentheses.cc	/^  void forward(const string &s, string ss, int k, int i, int removed, bool can) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
fourSum	4sum.cc	/^  vector<vector<int> > fourSum(vector<int> &a, int target) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
fourSumCount	4sum-ii.cc	/^  int fourSumCount(vector<int>& A, vector<int>& B, vector<int>& C, vector<int>& D) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
fraction-to-recurring-decimal.cc	fraction-to-recurring-decimal.cc	1;"	F	language:C++
fractionToDecimal	fraction-to-recurring-decimal.cc	/^  string fractionToDecimal(int aa, int bb) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
freedom-trail.cc	freedom-trail.cc	1;"	F	language:C++
freq	word-pattern-ii.cc	/^  vector<int> freq;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
frog-jump.cc	frog-jump.cc	1;"	F	language:C++
fullJustify	text-justification.cc	/^  vector<string> fullJustify(vector<string> &words, int L) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
g	palindrome-partitioning.cc	/^  void g(string &s, int i) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
g	word-break-ii.cc	/^  vector<bool> g;$/;"	m	language:C++	class:Solution	typeref:typename:vector<bool>	file:
g	word-ladder-ii.cc	/^  vector<vector<int>> g;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
game-of-life.cc	game-of-life.cc	1;"	F	language:C++
gameOfLife	game-of-life.cc	/^  void gameOfLife(vector<vector<int>> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
gas-station.cc	gas-station.cc	1;"	F	language:C++
gcd	rotate-array.cc	/^int gcd(int a, int b)$/;"	f	language:C++	typeref:typename:int
generalized-abbreviation.cc	generalized-abbreviation.cc	1;"	F	language:C++
generate	pascals-triangle.cc	/^  vector<vector<int> > generate(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
generate-parentheses.cc	generate-parentheses.cc	1;"	F	language:C++
generateAbbreviations	generalized-abbreviation.cc	/^  vector<string> generateAbbreviations(string word) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
generateMatrix	spiral-matrix-ii.cc	/^  vector<vector<int> > generateMatrix(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
generatePalindromes	palindrome-permutation-ii.cc	/^  vector<string> generatePalindromes(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
generateParenthesis	generate-parentheses.cc	/^  vector<string> generateParenthesis(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
generatePossibleNextMoves	flip-game.cc	/^  vector<string> generatePossibleNextMoves(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
generateTrees	unique-binary-search-trees-ii.cc	/^  vector<TreeNode *> generateTrees(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<TreeNode * >	file:
get	design-phone-directory.cc	/^  int get() {$/;"	f	language:C++	class:PhoneDirectory	typeref:typename:int	file:
get	lru-cache.cc	/^  int get(int key) {$/;"	f	language:C++	class:LRUCache	typeref:typename:int	file:
getFactors	factor-combinations.cc	/^  vector<vector<int>> getFactors(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
getHint	bulls-and-cows.cc	/^  string getHint(string secret, string guess) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
getHits	design-hit-counter.cc	/^  int getHits(int timestamp) {$/;"	f	language:C++	class:HitCounter	typeref:typename:int	file:
getIntersectionNode	intersection-of-two-linked-lists.cc	/^  ListNode *getIntersectionNode(ListNode *a, ListNode *b) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
getIntervals	data-stream-as-disjoint-intervals.cc	/^  vector<Interval> getIntervals() {$/;"	f	language:C++	class:SummaryRanges	typeref:typename:vector<Interval>	file:
getMaxKey	all-oone-data-structure.cc	/^  string getMaxKey() {$/;"	f	language:C++	class:AllOne	typeref:typename:string	file:
getMaxRepetitions	count-the-repetitions.cc	/^  int getMaxRepetitions(string s1, int n1, string s2, int n2) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
getMin	min-stack.cc	/^  int getMin() {$/;"	f	language:C++	class:MinStack	typeref:typename:int	file:
getMinKey	all-oone-data-structure.cc	/^  string getMinKey() {$/;"	f	language:C++	class:AllOne	typeref:typename:string	file:
getModifiedArray	range-addition.cc	/^  vector<int> getModifiedArray(int length, vector<vector<int>>& updates) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
getMoneyAmount	guess-number-higher-or-lower-ii.cc	/^  int getMoneyAmount(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
getNewsFeed	design-twitter.cc	/^  vector<int> getNewsFeed(int userId) {$/;"	f	language:C++	class:Twitter	typeref:typename:vector<int>	file:
getPermutation	permutation-sequence.cc	/^  string getPermutation(int n, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
getRandom	insert-delete-getrandom-o1-duplicates-allowed.cc	/^  int getRandom() {$/;"	f	language:C++	class:RandomizedCollection	typeref:typename:int	file:
getRandom	insert-delete-getrandom-o1.cc	/^  int getRandom() {$/;"	f	language:C++	class:RandomizedSet	typeref:typename:int	file:
getRandom	linked-list-random-node.cc	/^  int getRandom() {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
getRow	pascals-triangle-ii.cc	/^  vector<int> getRow(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
getSkyline	the-skyline-problem.cc	/^  vector<pair<int, int>> getSkyline(vector<vector<int>>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<pair<int,int>>	file:
getSum	count-of-range-sum.cc	/^  int getSum(vector<int> &fenwick, int x) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
getSum	sum-of-two-integers.cc	/^  int getSum(int a, int b) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
graph-valid-tree.cc	graph-valid-tree.cc	1;"	F	language:C++
gray-code.cc	gray-code.cc	1;"	F	language:C++
grayCode	gray-code.cc	/^  vector<int> grayCode(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
group-shifted-strings.cc	group-shifted-strings.cc	1;"	F	language:C++
groupStrings	group-shifted-strings.cc	/^  vector<vector<string>> groupStrings(vector<string>& strings) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<string>>	file:
guess-number-higher-or-lower-ii.cc	guess-number-higher-or-lower-ii.cc	1;"	F	language:C++
guess-number-higher-or-lower.cc	guess-number-higher-or-lower.cc	1;"	F	language:C++
guessNumber	guess-number-higher-or-lower.cc	/^  int guessNumber(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
h	balanced-binary-tree.cc	/^  int h(TreeNode *p, bool &b) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
h	design-snake-game.cc	/^  int w, h, x = 0, y = 0;$/;"	m	language:C++	class:SnakeGame	typeref:typename:int	file:
h	word-break-ii.cc	/^  void h(int i, int n, const string &s) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
h-index-ii.cc	h-index-ii.cc	1;"	F	language:C++
h-index.cc	h-index.cc	1;"	F	language:C++
hIndex	h-index-ii.cc	/^  int hIndex(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
hIndex	h-index.cc	/^  int hIndex(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
halves	remove-invalid-parentheses.cc	/^  vector<string> halves, res;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
hamming-distance.cc	hamming-distance.cc	1;"	F	language:C++
hammingDistance	hamming-distance.cc	/^  int hammingDistance(int x, int y) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
hammingWeight	number-of-1-bits.cc	/^  int hammingWeight(uint32_t n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
hamming_one	word-ladder.cc	/^  bool hamming_one(const string &a, const string &b) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
happy-number.cc	happy-number.cc	1;"	F	language:C++
has	add-and-search-word-data-structure-design.cc	/^    bool has;$/;"	m	language:C++	class:WordDictionary::TrieNode	typeref:typename:bool	file:
has	implement-trie-prefix-tree.cc	/^  bool has;$/;"	m	language:C++	class:TrieNode	typeref:typename:bool	file:
hasCycle	linked-list-cycle.cc	/^  bool hasCycle(ListNode *head) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
hasNext	binary-search-tree-iterator.cc	/^  bool hasNext() {$/;"	f	language:C++	class:BSTIterator	typeref:typename:bool	file:
hasNext	flatten-2d-vector.cc	/^  bool hasNext() {$/;"	f	language:C++	class:Vector2D	typeref:typename:bool	file:
hasNext	flatten-nested-list-iterator.cc	/^  bool hasNext() {$/;"	f	language:C++	class:NestedIterator	typeref:typename:bool	file:
hasNext	peeking-iterator.cc	/^  bool hasNext() const {$/;"	f	language:C++	class:PeekingIterator	typeref:typename:bool	file:
hasNext	zigzag-iterator.cc	/^  bool hasNext() {$/;"	f	language:C++	class:ZigzagIterator	typeref:typename:bool	file:
hasPathSum	path-sum.cc	/^    bool hasPathSum(TreeNode *x, int s) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
hash	perfect-rectangle.cc	/^  struct hash<pair<int, int>> {$/;"	s	language:C++	namespace:std	file:
head	linked-list-random-node.cc	/^  ListNode* head;$/;"	m	language:C++	class:Solution	typeref:typename:ListNode *	file:
heaters.cc	heaters.cc	1;"	F	language:C++
hierholzer	reconstruct-itinerary.cc	/^  void hierholzer(string x) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
hit	design-hit-counter.cc	/^  void hit(int timestamp) {$/;"	f	language:C++	class:HitCounter	typeref:typename:void	file:
house-robber-ii.cc	house-robber-ii.cc	1;"	F	language:C++
house-robber-iii.cc	house-robber-iii.cc	1;"	F	language:C++
house-robber.cc	house-robber.cc	1;"	F	language:C++
i	find-median-from-data-stream.cc	/^  int i = 0;$/;"	m	language:C++	class:MedianFinder	typeref:typename:int	file:
i	flatten-2d-vector.cc	/^  vector<int>::iterator i;$/;"	m	language:C++	class:Vector2D	typeref:typename:vector<int>::iterator	file:
i	moving-average-from-data-stream.cc	/^  int size, i = 0, n = 0;$/;"	m	language:C++	class:MovingAverage	typeref:typename:int	file:
i	zigzag-iterator.cc	/^  vector<int>::iterator i, ii, j, jj;$/;"	m	language:C++	class:ZigzagIterator	typeref:typename:vector<int>::iterator	file:
id	repeated-dna-sequences.cc	/^#define id(/;"	d	language:C++	file:
id	word-search-ii.cc	/^    int id;$/;"	m	language:C++	class:Solution::TrieNode	typeref:typename:int	file:
ii	zigzag-iterator.cc	/^  vector<int>::iterator i, ii, j, jj;$/;"	m	language:C++	class:ZigzagIterator	typeref:typename:vector<int>::iterator	file:
implement-queue-using-stacks.cc	implement-queue-using-stacks.cc	1;"	F	language:C++
implement-stack-using-queues.cc	implement-stack-using-queues.cc	1;"	F	language:C++
implement-strstr.cc	implement-strstr.cc	1;"	F	language:C++
implement-trie-prefix-tree.cc	implement-trie-prefix-tree.cc	1;"	F	language:C++
inc	all-oone-data-structure.cc	/^  void inc(string key) {$/;"	f	language:C++	class:AllOne	typeref:typename:void	file:
increasing-subsequences.cc	increasing-subsequences.cc	1;"	F	language:C++
increasing-triplet-subsequence.cc	increasing-triplet-subsequence.cc	1;"	F	language:C++
increasingTriplet	increasing-triplet-subsequence.cc	/^  bool increasingTriplet(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
inorder-successor-in-bst.cc	inorder-successor-in-bst.cc	1;"	F	language:C++
inorderSuccessor	inorder-successor-in-bst.cc	/^  TreeNode* inorderSuccessor(TreeNode* x, TreeNode* p) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
inorderTraversal	binary-tree-inorder-traversal.cc	/^  vector<int> inorderTraversal(TreeNode *p) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
inorderTraversal	binary-tree-inorder-traversal.cc	/^  vector<int> inorderTraversal(TreeNode* p) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
insert	implement-trie-prefix-tree.cc	/^  void insert(string s) {$/;"	f	language:C++	class:Trie	typeref:typename:void	file:
insert	insert-delete-getrandom-o1-duplicates-allowed.cc	/^  bool insert(int val) {$/;"	f	language:C++	class:RandomizedCollection	typeref:typename:bool	file:
insert	insert-delete-getrandom-o1.cc	/^  bool insert(int val) {$/;"	f	language:C++	class:RandomizedSet	typeref:typename:bool	file:
insert	insert-interval.cc	/^  vector<Interval> insert(vector<Interval> &xs, Interval x) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<Interval>	file:
insert	sudoku-solver.cc	/^  void insert(int i, int l, int r, int c) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
insert-delete-getrandom-o1-duplicates-allowed.cc	insert-delete-getrandom-o1-duplicates-allowed.cc	1;"	F	language:C++
insert-delete-getrandom-o1.cc	insert-delete-getrandom-o1.cc	1;"	F	language:C++
insert-interval.cc	insert-interval.cc	1;"	F	language:C++
insertion-sort-list.cc	insertion-sort-list.cc	1;"	F	language:C++
insertionSortList	insertion-sort-list.cc	/^    ListNode *insertionSortList(ListNode *head) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
intToRoman	integer-to-roman.cc	/^  string intToRoman(int num) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
integer-break.cc	integer-break.cc	1;"	F	language:C++
integer-replacement.cc	integer-replacement.cc	1;"	F	language:C++
integer-to-english-words.cc	integer-to-english-words.cc	1;"	F	language:C++
integer-to-roman.cc	integer-to-roman.cc	1;"	F	language:C++
integerBreak	integer-break.cc	/^  int integerBreak(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
integerReplacement	integer-replacement.cc	/^  int integerReplacement(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
interleave	create-maximum-number.cc	/^  vector<int> interleave(vector<int> a, const vector<int> &b) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
interleaving-string.cc	interleaving-string.cc	1;"	F	language:C++
intersect	intersection-of-two-arrays-ii.cc	/^  vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
intersection	intersection-of-two-arrays.cc	/^  vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
intersection-of-two-arrays-ii.cc	intersection-of-two-arrays-ii.cc	1;"	F	language:C++
intersection-of-two-arrays.cc	intersection-of-two-arrays.cc	1;"	F	language:C++
intersection-of-two-linked-lists.cc	intersection-of-two-linked-lists.cc	1;"	F	language:C++
invert-binary-tree.cc	invert-binary-tree.cc	1;"	F	language:C++
invertTree	invert-binary-tree.cc	/^  TreeNode* invertTree(TreeNode* root) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
ipo.cc	ipo.cc	1;"	F	language:C++
ipv4	validate-ip-address.cc	/^  bool ipv4(string a) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
ipv6	validate-ip-address.cc	/^  bool ipv6(string a) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
is-subsequence.cc	is-subsequence.cc	1;"	F	language:C++
isAdditiveNumber	additive-number.cc	/^  bool isAdditiveNumber(string num) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isAnagram	valid-anagram.cc	/^  bool isAnagram(string s, string t) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isBalanced	balanced-binary-tree.cc	/^  bool isBalanced(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isConvex	convex-polygon.cc	/^  bool isConvex(vector<vector<int>>& points) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isHappy	happy-number.cc	/^  bool isHappy(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isInterleave	interleaving-string.cc	/^  bool isInterleave(string s1, string s2, string s3) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isIsomorphic	isomorphic-strings.cc	/^  bool isIsomorphic(string s, string t) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isMatch	regular-expression-matching.cc	/^  bool isMatch(const char *s, const char *p) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isMatch	wildcard-matching.cc	/^  bool isMatch(const char *s, const char *p) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isNumber	valid-number.cc	/^  bool isNumber(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isOneEditDistance	one-edit-distance.cc	/^  bool isOneEditDistance(string s, string t) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isPalindrome	palindrome-linked-list.cc	/^  bool isPalindrome(ListNode *head) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isPalindrome	palindrome-number.cc	/^  bool isPalindrome(int x) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isPalindrome	valid-palindrome.cc	/^  bool isPalindrome(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isPerfectSquare	valid-perfect-square.cc	/^  bool isPerfectSquare(int num) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isPowerOfFour	power-of-four.cc	/^  bool isPowerOfFour(int num) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isPowerOfThree	power-of-three.cc	/^  bool isPowerOfThree(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isPowerOfTwo	power-of-two.cc	/^  bool isPowerOfTwo(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isRectangleCover	perfect-rectangle.cc	/^  bool isRectangleCover(vector<vector<int>>& rectangles) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isReflected	line-reflection.cc	/^  bool isReflected(vector<pair<int, int>>& points) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isSameTree	same-tree.cc	/^  bool isSameTree(TreeNode *p, TreeNode *q) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isScramble	scramble-string.cc	/^  bool isScramble(string a, string b) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isSelfCrossing	self-crossing.cc	/^  bool isSelfCrossing(vector<int>& x) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isStrobogrammatic	strobogrammatic-number.cc	/^  bool isStrobogrammatic(string num) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isSubsequence	is-subsequence.cc	/^  bool isSubsequence(string s, string t) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isSymmetric	symmetric-tree.cc	/^  bool isSymmetric(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isUgly	ugly-number.cc	/^  bool isUgly(int num) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isUnique	unique-word-abbreviation.cc	/^  bool isUnique(string word) {$/;"	f	language:C++	class:ValidWordAbbr	typeref:typename:bool	file:
isValid	valid-parentheses.cc	/^  bool isValid(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isValidBST	validate-binary-search-tree.cc	/^  bool isValidBST(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isValidBST	validate-binary-search-tree.cc	/^  bool isValidBST(TreeNode *x) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isValidSerialization	verify-preorder-serialization-of-a-binary-tree.cc	/^  bool isValidSerialization(string preorder) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
isValidSudoku	valid-sudoku.cc	/^  bool isValidSudoku(vector<vector<char> > &a) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
island-perimeter.cc	island-perimeter.cc	1;"	F	language:C++
islandPerimeter	island-perimeter.cc	/^  int islandPerimeter(vector<vector<int>>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
isomorphic-strings.cc	isomorphic-strings.cc	1;"	F	language:C++
it	design-twitter.cc	/^    typedef vector<pair<int, int>>::reverse_iterator it;$/;"	t	language:C++	function:Twitter::getNewsFeed	typeref:typename:vector<pair<int,int>>::reverse_iterator	file:
j	flatten-2d-vector.cc	/^  vector<vector<int>>::iterator j, jj;$/;"	m	language:C++	class:Vector2D	typeref:typename:vector<vector<int>>::iterator	file:
j	zigzag-iterator.cc	/^  vector<int>::iterator i, ii, j, jj;$/;"	m	language:C++	class:ZigzagIterator	typeref:typename:vector<int>::iterator	file:
jj	flatten-2d-vector.cc	/^  vector<vector<int>>::iterator j, jj;$/;"	m	language:C++	class:Vector2D	typeref:typename:vector<vector<int>>::iterator	file:
jj	zigzag-iterator.cc	/^  vector<int>::iterator i, ii, j, jj;$/;"	m	language:C++	class:ZigzagIterator	typeref:typename:vector<int>::iterator	file:
jump	jump-game-ii.cc	/^  int jump(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
jump-game-ii.cc	jump-game-ii.cc	1;"	F	language:C++
jump-game.cc	jump-game.cc	1;"	F	language:C++
k	can-i-win.cc	/^  int k;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
k-th-smallest-in-lexicographical-order.cc	k-th-smallest-in-lexicographical-order.cc	1;"	F	language:C++
k0	repeated-dna-sequences.cc	/^#define k0(/;"	d	language:C++	file:
k1	repeated-dna-sequences.cc	/^#define k1(/;"	d	language:C++	file:
kSmallestPairs	find-k-pairs-with-smallest-sums.cc	/^  vector<pair<int, int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<pair<int,int>>	file:
ka	create-maximum-number.cc	/^  void ka(const T a[], int n, int k, int sa[])$/;"	f	language:C++	namespace:KoAluru	typeref:typename:void
keyboard-row.cc	keyboard-row.cc	1;"	F	language:C++
ks	all-oone-data-structure.cc	/^  struct Bucket { int v; unordered_set<string> ks; };$/;"	m	language:C++	struct:AllOne::Bucket	typeref:typename:unordered_set<string>	file:
kth-largest-element-in-an-array.cc	kth-largest-element-in-an-array.cc	1;"	F	language:C++
kth-smallest-element-in-a-bst.cc	kth-smallest-element-in-a-bst.cc	1;"	F	language:C++
kth-smallest-element-in-a-sorted-matrix.cc	kth-smallest-element-in-a-sorted-matrix.cc	1;"	F	language:C++
kthSmallest	kth-smallest-element-in-a-bst.cc	/^  int kthSmallest(TreeNode *x, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
kthSmallest	kth-smallest-element-in-a-sorted-matrix.cc	/^  int kthSmallest(vector<vector<int>>& matrix, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
l	convert-sorted-list-to-binary-search-tree.cc	/^  ListNode *l;$/;"	m	language:C++	class:Solution	typeref:typename:ListNode *	file:
ladderLength	word-ladder.cc	/^  int ladderLength(string start, string end, unordered_set<string> &dict) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
largest-bst-subtree.cc	largest-bst-subtree.cc	1;"	F	language:C++
largest-divisible-subset.cc	largest-divisible-subset.cc	1;"	F	language:C++
largest-number.cc	largest-number.cc	1;"	F	language:C++
largest-rectangle-in-histogram.cc	largest-rectangle-in-histogram.cc	1;"	F	language:C++
largestBSTSubtree	largest-bst-subtree.cc	/^  int largestBSTSubtree(TreeNode* root) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
largestDivisibleSubset	largest-divisible-subset.cc	/^  vector<int> largestDivisibleSubset(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
largestNumber	largest-number.cc	/^  string largestNumber(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
largestRectangleArea	largest-rectangle-in-histogram.cc	/^  int largestRectangleArea(vector<int> &h) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
last	logger-rate-limiter.cc	/^  unordered_map<string, int> last;$/;"	m	language:C++	class:Logger	typeref:typename:unordered_map<string,int>	file:
lastRemaining	elimination-game.cc	/^  int lastRemaining(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
length-of-last-word.cc	length-of-last-word.cc	1;"	F	language:C++
lengthLongestPath	longest-absolute-file-path.cc	/^  int lengthLongestPath(string input) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
lengthOfLIS	longest-increasing-subsequence.cc	/^  int lengthOfLIS(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
lengthOfLastWord	length-of-last-word.cc	/^  int lengthOfLastWord(string a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
lengthOfLongestSubstring	longest-substring-without-repeating-characters.cc	/^  int lengthOfLongestSubstring(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
lengthOfLongestSubstringKDistinct	longest-substring-with-at-most-k-distinct-characters.cc	/^  int lengthOfLongestSubstringKDistinct(string s, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
lengthOfLongestSubstringTwoDistinct	longest-substring-with-at-most-two-distinct-characters.cc	/^  int lengthOfLongestSubstringTwoDistinct(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
letter-combinations-of-a-phone-number.cc	letter-combinations-of-a-phone-number.cc	1;"	F	language:C++
letterCombinations	letter-combinations-of-a-phone-number.cc	/^  vector<string> letterCombinations(string digits) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
levelOrder	binary-tree-level-order-traversal.cc	/^  vector<vector<int> > levelOrder(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
levelOrderBottom	binary-tree-level-order-traversal-ii.cc	/^  vector<vector<int> > levelOrderBottom(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
lexicalOrder	lexicographical-numbers.cc	/^  vector<int> lexicalOrder(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
lexicographical-numbers.cc	lexicographical-numbers.cc	1;"	F	language:C++
license-key-formatting.cc	license-key-formatting.cc	1;"	F	language:C++
licenseKeyFormatting	license-key-formatting.cc	/^  string licenseKeyFormatting(string S, int K) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
line-reflection.cc	line-reflection.cc	1;"	F	language:C++
linked-list-cycle-ii.cc	linked-list-cycle-ii.cc	1;"	F	language:C++
linked-list-cycle.cc	linked-list-cycle.cc	1;"	F	language:C++
linked-list-random-node.cc	linked-list-random-node.cc	1;"	F	language:C++
ll	contains-duplicate-iii.cc	/^    typedef long long ll;$/;"	t	language:C++	function:Solution::containsNearbyAlmostDuplicate	typeref:typename:long long	file:
ll	expression-add-operators.cc	/^typedef long long ll;$/;"	t	language:C++	typeref:typename:long long	file:
logger-rate-limiter.cc	logger-rate-limiter.cc	1;"	F	language:C++
lonely-pixel-i.cc	lonely-pixel-i.cc	1;"	F	language:C++
lonely-pixel-ii.cc	lonely-pixel-ii.cc	1;"	F	language:C++
longest-absolute-file-path.cc	longest-absolute-file-path.cc	1;"	F	language:C++
longest-common-prefix.cc	longest-common-prefix.cc	1;"	F	language:C++
longest-consecutive-sequence.cc	longest-consecutive-sequence.cc	1;"	F	language:C++
longest-increasing-path-in-a-matrix.cc	longest-increasing-path-in-a-matrix.cc	1;"	F	language:C++
longest-increasing-subsequence.cc	longest-increasing-subsequence.cc	1;"	F	language:C++
longest-palindrome.cc	longest-palindrome.cc	1;"	F	language:C++
longest-palindromic-substring.cc	longest-palindromic-substring.cc	1;"	F	language:C++
longest-repeating-character-replacement.cc	longest-repeating-character-replacement.cc	1;"	F	language:C++
longest-substring-with-at-least-k-repeating-characters.cc	longest-substring-with-at-least-k-repeating-characters.cc	1;"	F	language:C++
longest-substring-with-at-most-k-distinct-characters.cc	longest-substring-with-at-most-k-distinct-characters.cc	1;"	F	language:C++
longest-substring-with-at-most-two-distinct-characters.cc	longest-substring-with-at-most-two-distinct-characters.cc	1;"	F	language:C++
longest-substring-without-repeating-characters.cc	longest-substring-without-repeating-characters.cc	1;"	F	language:C++
longest-valid-parentheses.cc	longest-valid-parentheses.cc	1;"	F	language:C++
longestCommonPrefix	longest-common-prefix.cc	/^  string longestCommonPrefix(vector<string> &strs) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
longestConsecutive	binary-tree-longest-consecutive-sequence.cc	/^  int longestConsecutive(TreeNode *x) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
longestConsecutive	longest-consecutive-sequence.cc	/^  int longestConsecutive(vector<int> &num) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
longestIncreasingPath	longest-increasing-path-in-a-matrix.cc	/^  int longestIncreasingPath(vector<vector<int>>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
longestPalindrome	longest-palindrome.cc	/^  int longestPalindrome(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
longestPalindrome	longest-palindromic-substring.cc	/^  string longestPalindrome(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
longestSubstring	longest-substring-with-at-least-k-repeating-characters.cc	/^  int longestSubstring(string s, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
longestValidParentheses	longest-valid-parentheses.cc	/^  int longestValidParentheses(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
lower	count-of-range-sum.cc	/^  int lower, upper;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
lowest-common-ancestor-of-a-binary-search-tree.cc	lowest-common-ancestor-of-a-binary-search-tree.cc	1;"	F	language:C++
lowest-common-ancestor-of-a-binary-tree.cc	lowest-common-ancestor-of-a-binary-tree.cc	1;"	F	language:C++
lowestCommonAncestor	lowest-common-ancestor-of-a-binary-search-tree.cc	/^  TreeNode *lowestCommonAncestor(TreeNode *x, TreeNode *p, TreeNode *q) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
lowestCommonAncestor	lowest-common-ancestor-of-a-binary-tree.cc	/^  TreeNode *lowestCommonAncestor(TreeNode *x, TreeNode *p, TreeNode *q) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
lru-cache.cc	lru-cache.cc	1;"	F	language:C++
m	insert-delete-getrandom-o1-duplicates-allowed.cc	/^  unordered_multimap<int, int> m;$/;"	m	language:C++	class:RandomizedCollection	typeref:typename:unordered_multimap<int,int>	file:
m	insert-delete-getrandom-o1.cc	/^  unordered_map<int, int> m;$/;"	m	language:C++	class:RandomizedSet	typeref:typename:unordered_map<int,int>	file:
m	letter-combinations-of-a-phone-number.cc	/^  map<char, string> m;$/;"	m	language:C++	class:Solution	typeref:typename:map<char,string>	file:
m	longest-increasing-path-in-a-matrix.cc	/^  int m, n;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
m	path-sum-iii.cc	/^  unordered_map<int, int> m;$/;"	m	language:C++	class:Solution	typeref:typename:unordered_map<int,int>	file:
m	range-sum-query-2d-mutable.cc	/^  int m, n;$/;"	m	language:C++	class:NumMatrix	typeref:typename:int	file:
m	reconstruct-itinerary.cc	/^  unordered_map<string, multiset<string>> m;$/;"	m	language:C++	class:Solution	typeref:typename:unordered_map<string,multiset<string>>	file:
m	unique-word-abbreviation.cc	/^  map<string, string> m;$/;"	m	language:C++	class:ValidWordAbbr	typeref:typename:map<string,string>	file:
m	word-search-ii.cc	/^  int m, n;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
magical-string.cc	magical-string.cc	1;"	F	language:C++
magicalString	magical-string.cc	/^  int magicalString(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
main	create-maximum-number.cc	/^  void main(const T a[], int n, int k, int sa[], int b[])$/;"	f	language:C++	namespace:KoAluru	typeref:typename:void
majority-element-ii.cc	majority-element-ii.cc	1;"	F	language:C++
majority-element.cc	majority-element.cc	1;"	F	language:C++
majorityElement	majority-element-ii.cc	/^  vector<int> majorityElement(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
majorityElement	majority-element.cc	/^  int majorityElement(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
makesquare	matchsticks-to-square.cc	/^  bool makesquare(vector<int>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
manacher	palindrome-pairs.cc	/^  void manacher(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
matchsticks-to-square.cc	matchsticks-to-square.cc	1;"	F	language:C++
max-consecutive-ones.cc	max-consecutive-ones.cc	1;"	F	language:C++
max-points-on-a-line.cc	max-points-on-a-line.cc	1;"	F	language:C++
max-sum-of-sub-matrix-no-larger-than-k.cc	max-sum-of-sub-matrix-no-larger-than-k.cc	1;"	F	language:C++
maxArea	container-with-most-water.cc	/^  int maxArea(vector<int> &h) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxCoins	burst-balloons.cc	/^  int maxCoins(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxDepth	maximum-depth-of-binary-tree.cc	/^  int maxDepth(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxEnvelopes	russian-doll-envelopes.cc	/^  int maxEnvelopes(vector<pair<int, int>>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxKilledEnemies	bomb-enemy.cc	/^  int maxKilledEnemies(vector<vector<char>>& grid) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxNumber	create-maximum-number.cc	/^  vector<int> maxNumber(vector<int> &a, vector<int> &b, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
maxPathSum	binary-tree-maximum-path-sum.cc	/^  int maxPathSum(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxPoints	max-points-on-a-line.cc	/^    int maxPoints(vector<Point> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxProduct	maximum-product-of-word-lengths.cc	/^  int maxProduct(vector<string>& words) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxProduct	maximum-product-subarray.cc	/^  int maxProduct(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxProfit	best-time-to-buy-and-sell-stock-ii.cc	/^  int maxProfit(vector<int> &prices) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxProfit	best-time-to-buy-and-sell-stock-iii.cc	/^  int maxProfit(vector<int> &prices) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxProfit	best-time-to-buy-and-sell-stock-iv.cc	/^  int maxProfit(int k, vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxProfit	best-time-to-buy-and-sell-stock-iv.cc	/^  int maxProfit(int k, vector<int> &prices) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxProfit	best-time-to-buy-and-sell-stock-with-cooldown.cc	/^  int maxProfit(vector<int>& prices) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxProfit	best-time-to-buy-and-sell-stock.cc	/^  int maxProfit(vector<int> &prices) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxRotateFunction	rotate-function.cc	/^  int maxRotateFunction(vector<int>& A) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxSlidingWindow	sliding-window-maximum.cc	/^  vector<int> maxSlidingWindow(vector<int> &a, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
maxSubArray	maximum-subarray.cc	/^  int maxSubArray(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxSubArrayLen	maximum-size-subarray-sum-equals-k.cc	/^  int maxSubArrayLen(vector<int>& nums, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maxSubseq	create-maximum-number.cc	/^  vector<int> maxSubseq(const vector<int> &a, int c) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
maxSumSubmatrix	max-sum-of-sub-matrix-no-larger-than-k.cc	/^  int maxSumSubmatrix(vector<vector<int>>& matrix, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maximal-rectangle.cc	maximal-rectangle.cc	1;"	F	language:C++
maximal-square.cc	maximal-square.cc	1;"	F	language:C++
maximalRectangle	maximal-rectangle.cc	/^  int maximalRectangle(vector<vector<char> > &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maximalSquare	maximal-square.cc	/^  int maximalSquare(vector<vector<char>> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
maximum-depth-of-binary-tree.cc	maximum-depth-of-binary-tree.cc	1;"	F	language:C++
maximum-gap.cc	maximum-gap.cc	1;"	F	language:C++
maximum-product-of-word-lengths.cc	maximum-product-of-word-lengths.cc	1;"	F	language:C++
maximum-product-subarray.cc	maximum-product-subarray.cc	1;"	F	language:C++
maximum-size-subarray-sum-equals-k.cc	maximum-size-subarray-sum-equals-k.cc	1;"	F	language:C++
maximum-subarray.cc	maximum-subarray.cc	1;"	F	language:C++
maximum-xor-of-two-numbers-in-an-array.cc	maximum-xor-of-two-numbers-in-an-array.cc	1;"	F	language:C++
maximumGap	maximum-gap.cc	/^  int maximumGap(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
mean	sudoku-solver.cc	/^  pair<int, int> mean[M];$/;"	m	language:C++	class:Solution	typeref:typename:pair<int,int>[]	file:
median-of-two-sorted-arrays.cc	median-of-two-sorted-arrays.cc	1;"	F	language:C++
medianSlidingWindow	sliding-window-median.cc	/^  vector<double> medianSlidingWindow(vector<int>& nums, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<double>	file:
meeting-rooms-ii.cc	meeting-rooms-ii.cc	1;"	F	language:C++
meeting-rooms.cc	meeting-rooms.cc	1;"	F	language:C++
memo	can-i-win.cc	/^  unordered_map<int, bool> memo;$/;"	m	language:C++	class:Solution	typeref:typename:unordered_map<int,bool>	file:
merge	merge-intervals.cc	/^  vector<Interval> merge(vector<Interval> &intervals) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<Interval>	file:
merge	merge-sorted-array.cc	/^  void merge(vector<int> &a, int m, vector<int> &b, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
merge-intervals.cc	merge-intervals.cc	1;"	F	language:C++
merge-k-sorted-lists.cc	merge-k-sorted-lists.cc	1;"	F	language:C++
merge-sorted-array.cc	merge-sorted-array.cc	1;"	F	language:C++
merge-two-sorted-lists.cc	merge-two-sorted-lists.cc	1;"	F	language:C++
mergeKLists	merge-k-sorted-lists.cc	/^  ListNode *mergeKLists(vector<ListNode *> &lists) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
mergeTwoLists	merge-two-sorted-lists.cc	/^  ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
mi	find-median-from-data-stream.cc	/^  priority_queue<int, vector<int>, greater<int>> mi;$/;"	m	language:C++	class:MedianFinder	typeref:typename:priority_queue<int,vector<int>,greater<int>>	file:
milestones	remove-invalid-parentheses.cc	/^  vector<int> milestones, milestones2;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
milestones2	remove-invalid-parentheses.cc	/^  vector<int> milestones, milestones2;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
min-stack.cc	min-stack.cc	1;"	F	language:C++
minArea	smallest-rectangle-enclosing-black-pixels.cc	/^  int minArea(vector<vector<char>> &a, int x, int y) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minCost	paint-house.cc	/^  int minCost(vector<vector<int>>& costs) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minCostII	paint-house-ii.cc	/^  int minCostII(vector<vector<int>>& costs) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minCut	palindrome-partitioning-ii.cc	/^  int minCut(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minDepth	minimum-depth-of-binary-tree.cc	/^    int minDepth(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minDistance	edit-distance.cc	/^  int minDistance(string a, string b) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minMeetingRooms	meeting-rooms-ii.cc	/^  int minMeetingRooms(vector<Interval>& intervals) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minMoves	minimum-moves-to-equal-array-elements.cc	/^  int minMoves(vector<int>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minMoves2	minimum-moves-to-equal-array-elements-ii.cc	/^  int minMoves2(vector<int>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minPatches	patching-array.cc	/^  int minPatches(vector<int>& nums, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minPathSum	minimum-path-sum.cc	/^  int minPathSum(vector<vector<int> > &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minSubArrayLen	minimum-size-subarray-sum.cc	/^  int minSubArrayLen(int s, vector<int>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minTotalDistance	best-meeting-point.cc	/^  int minTotalDistance(vector<vector<int>>& grid) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minTransfers	optimal-account-balancing.cc	/^  int minTransfers(vector<vector<int>>& t) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minWindow	minimum-window-substring.cc	/^  string minWindow(string S, string T) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
mini-parser.cc	mini-parser.cc	1;"	F	language:C++
minimum-depth-of-binary-tree.cc	minimum-depth-of-binary-tree.cc	1;"	F	language:C++
minimum-height-trees.cc	minimum-height-trees.cc	1;"	F	language:C++
minimum-moves-to-equal-array-elements-ii.cc	minimum-moves-to-equal-array-elements-ii.cc	1;"	F	language:C++
minimum-moves-to-equal-array-elements.cc	minimum-moves-to-equal-array-elements.cc	1;"	F	language:C++
minimum-number-of-arrows-to-burst-balloons.cc	minimum-number-of-arrows-to-burst-balloons.cc	1;"	F	language:C++
minimum-path-sum.cc	minimum-path-sum.cc	1;"	F	language:C++
minimum-size-subarray-sum.cc	minimum-size-subarray-sum.cc	1;"	F	language:C++
minimum-window-substring.cc	minimum-window-substring.cc	1;"	F	language:C++
minimumTotal	triangle.cc	/^  int minimumTotal(vector<vector<int> > &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
minus_to_plus	create-maximum-number.cc	/^  void minus_to_plus(T a[], int sa[], int n, int k)$/;"	f	language:C++	namespace:KoAluru	typeref:typename:void
missing-number.cc	missing-number.cc	1;"	F	language:C++
missing-ranges.cc	missing-ranges.cc	1;"	F	language:C++
missingNumber	missing-number.cc	/^  int missingNumber(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
most-frequent-subtree-sum.cc	most-frequent-subtree-sum.cc	1;"	F	language:C++
move	design-snake-game.cc	/^  int move(string direction) {$/;"	f	language:C++	class:SnakeGame	typeref:typename:int	file:
move	design-tic-tac-toe.cc	/^  int move(int row, int col, int player) {$/;"	f	language:C++	class:TicTacToe	typeref:typename:int	file:
move-zeroes.cc	move-zeroes.cc	1;"	F	language:C++
moveZeroes	move-zeroes.cc	/^  void moveZeroes(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
moving-average-from-data-stream.cc	moving-average-from-data-stream.cc	1;"	F	language:C++
mp	word-pattern-ii.cc	/^  unordered_map<char, string> mp;$/;"	m	language:C++	class:Solution	typeref:typename:unordered_map<char,string>	file:
multiply	multiply-strings.cc	/^  string multiply(string a, string b) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
multiply	sparse-matrix-multiplication.cc	/^  vector<vector<int>> multiply(vector<vector<int>>& A, vector<vector<int>>& B) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
multiply-strings.cc	multiply-strings.cc	1;"	F	language:C++
mx	find-median-from-data-stream.cc	/^  priority_queue<int> mx;$/;"	m	language:C++	class:MedianFinder	typeref:typename:priority_queue<int>	file:
n	design-tic-tac-toe.cc	/^  int n;$/;"	m	language:C++	class:TicTacToe	typeref:typename:int	file:
n	expression-add-operators.cc	/^  int n, nn, target;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
n	expression-add-operators.cc	/^  int n, target;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
n	longest-increasing-path-in-a-matrix.cc	/^  int m, n;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
n	moving-average-from-data-stream.cc	/^  int size, i = 0, n = 0;$/;"	m	language:C++	class:MovingAverage	typeref:typename:int	file:
n	n-queens-ii.cc	/^  int c, n;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
n	n-queens.cc	/^  int c, n;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
n	range-sum-query-2d-mutable.cc	/^  int m, n;$/;"	m	language:C++	class:NumMatrix	typeref:typename:int	file:
n	word-search-ii.cc	/^  int m, n;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
n-queens-ii.cc	n-queens-ii.cc	1;"	F	language:C++
n-queens.cc	n-queens.cc	1;"	F	language:C++
nested-list-weight-sum-ii.cc	nested-list-weight-sum-ii.cc	1;"	F	language:C++
nested-list-weight-sum.cc	nested-list-weight-sum.cc	1;"	F	language:C++
next	binary-search-tree-iterator.cc	/^  int next() {$/;"	f	language:C++	class:BSTIterator	typeref:typename:int	file:
next	flatten-2d-vector.cc	/^  int next() {$/;"	f	language:C++	class:Vector2D	typeref:typename:int	file:
next	flatten-nested-list-iterator.cc	/^  int next() {$/;"	f	language:C++	class:NestedIterator	typeref:typename:int	file:
next	happy-number.cc	/^  int next(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
next	moving-average-from-data-stream.cc	/^  double next(int val) {$/;"	f	language:C++	class:MovingAverage	typeref:typename:double	file:
next	peeking-iterator.cc	/^  int next() {$/;"	f	language:C++	class:PeekingIterator	typeref:typename:int	file:
next	zigzag-iterator.cc	/^  int next() {$/;"	f	language:C++	class:ZigzagIterator	typeref:typename:int	file:
next-permutation.cc	next-permutation.cc	1;"	F	language:C++
nextPermutation	next-permutation.cc	/^  void nextPermutation(vector<int> &num) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
nim-game.cc	nim-game.cc	1;"	F	language:C++
nn	expression-add-operators.cc	/^  int n, nn, target;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
non-overlapping-intervals.cc	non-overlapping-intervals.cc	1;"	F	language:C++
nth-digit.cc	nth-digit.cc	1;"	F	language:C++
nthSuperUglyNumber	super-ugly-number.cc	/^  int nthSuperUglyNumber(int n, vector<int>& primes) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
nthUglyNumber	ugly-number-ii.cc	/^  int nthUglyNumber(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
numDecodings	decode-ways.cc	/^  int numDecodings(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
numDistinct	distinct-subsequences.cc	/^    int numDistinct(string S, string T) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
numIslands	number-of-islands.cc	/^  int numIslands(vector<vector<char>> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
numIslands2	number-of-islands-ii.cc	/^  vector<int> numIslands2(int m, int n, vector<pair<int, int>>& positions) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
numSquares	perfect-squares.cc	/^  int numSquares(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
numTrees	unique-binary-search-trees.cc	/^  int numTrees(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
numWays	paint-fence.cc	/^  int numWays(int n, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
number-complement.cc	number-complement.cc	1;"	F	language:C++
number-of-1-bits.cc	number-of-1-bits.cc	1;"	F	language:C++
number-of-boomerangs.cc	number-of-boomerangs.cc	1;"	F	language:C++
number-of-connected-components-in-an-undirected-graph.cc	number-of-connected-components-in-an-undirected-graph.cc	1;"	F	language:C++
number-of-digit-one.cc	number-of-digit-one.cc	1;"	F	language:C++
number-of-islands-ii.cc	number-of-islands-ii.cc	1;"	F	language:C++
number-of-islands.cc	number-of-islands.cc	1;"	F	language:C++
number-of-segments-in-a-string.cc	number-of-segments-in-a-string.cc	1;"	F	language:C++
numberOfArithmeticSlices	arithmetic-slices-ii-subsequence.cc	/^  int numberOfArithmeticSlices(vector<int>& A) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
numberOfArithmeticSlices	arithmetic-slices.cc	/^  int numberOfArithmeticSlices(vector<int>& A) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
numberOfBoomerangs	number-of-boomerangs.cc	/^  int numberOfBoomerangs(vector<pair<int, int>>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
numberOfPatterns	android-unlock-patterns.cc	/^  int numberOfPatterns(int m, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
numberToWords	integer-to-english-words.cc	/^  string numberToWords(int x) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
occ	design-snake-game.cc	/^  vector<vector<bool>> occ;$/;"	m	language:C++	class:SnakeGame	typeref:typename:vector<vector<bool>>	file:
odd-even-linked-list.cc	odd-even-linked-list.cc	1;"	F	language:C++
oddEvenList	odd-even-linked-list.cc	/^  ListNode* oddEvenList(ListNode* head) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
one-edit-distance.cc	one-edit-distance.cc	1;"	F	language:C++
ones-and-zeroes.cc	ones-and-zeroes.cc	1;"	F	language:C++
op	different-ways-to-add-parentheses.cc	/^  int op(char c, int x, int y) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
operator ()	merge-k-sorted-lists.cc	/^      bool operator()(const ListNode *x, const ListNode *y) const {$/;"	f	language:C++	struct:Solution::mergeKLists::Cmp	typeref:typename:bool	file:
operator ()	perfect-rectangle.cc	/^    size_t operator()(const pair<int, int>& x) const {$/;"	f	language:C++	struct:std::hash	typeref:typename:size_t	file:
operator <	max-points-on-a-line.cc	/^bool operator<(const Point &a, const Point &b)$/;"	f	language:C++	typeref:typename:bool
optimal-account-balancing.cc	optimal-account-balancing.cc	1;"	F	language:C++
originalDigits	reconstruct-original-digits-from-english.cc	/^  string originalDigits(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
p	word-pattern-ii.cc	/^  string p, s;$/;"	m	language:C++	class:Solution	typeref:typename:string	file:
pacific-atlantic-water-flow.cc	pacific-atlantic-water-flow.cc	1;"	F	language:C++
pacificAtlantic	pacific-atlantic-water-flow.cc	/^  vector<pair<int, int>> pacificAtlantic(vector<vector<int>>& matrix) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<pair<int,int>>	file:
paint-fence.cc	paint-fence.cc	1;"	F	language:C++
paint-house-ii.cc	paint-house-ii.cc	1;"	F	language:C++
paint-house.cc	paint-house.cc	1;"	F	language:C++
palindrome-linked-list.cc	palindrome-linked-list.cc	1;"	F	language:C++
palindrome-number.cc	palindrome-number.cc	1;"	F	language:C++
palindrome-pairs.cc	palindrome-pairs.cc	1;"	F	language:C++
palindrome-partitioning-ii.cc	palindrome-partitioning-ii.cc	1;"	F	language:C++
palindrome-partitioning.cc	palindrome-partitioning.cc	1;"	F	language:C++
palindrome-permutation-ii.cc	palindrome-permutation-ii.cc	1;"	F	language:C++
palindrome-permutation.cc	palindrome-permutation.cc	1;"	F	language:C++
palindromePairs	palindrome-pairs.cc	/^  vector<vector<int>> palindromePairs(vector<string>& words) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
parent	minimum-height-trees.cc	/^  vector<int> parent;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
parseTernary	ternary-expression-parser.cc	/^  string parseTernary(string expression) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
partition	palindrome-partitioning.cc	/^  vector<vector<string>> partition(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<string>>	file:
partition	partition-list.cc	/^  ListNode *partition(ListNode *p, int x) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
partition-equal-subset-sum.cc	partition-equal-subset-sum.cc	1;"	F	language:C++
partition-list.cc	partition-list.cc	1;"	F	language:C++
pascals-triangle-ii.cc	pascals-triangle-ii.cc	1;"	F	language:C++
pascals-triangle.cc	pascals-triangle.cc	1;"	F	language:C++
patching-array.cc	patching-array.cc	1;"	F	language:C++
path-sum-ii.cc	path-sum-ii.cc	1;"	F	language:C++
path-sum-iii.cc	path-sum-iii.cc	1;"	F	language:C++
path-sum.cc	path-sum.cc	1;"	F	language:C++
pathSum	path-sum-ii.cc	/^  vector<vector<int> > pathSum(TreeNode *root, int sum) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
pathSum	path-sum-iii.cc	/^  int pathSum(TreeNode* root, int sum) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
peek	implement-queue-using-stacks.cc	/^  int peek(void) {$/;"	f	language:C++	class:Queue	typeref:typename:int	file:
peek	peeking-iterator.cc	/^  int peek() {$/;"	f	language:C++	class:PeekingIterator	typeref:typename:int	file:
peeking-iterator.cc	peeking-iterator.cc	1;"	F	language:C++
perfect-rectangle.cc	perfect-rectangle.cc	1;"	F	language:C++
perfect-squares.cc	perfect-squares.cc	1;"	F	language:C++
perm	android-unlock-patterns.cc	/^  void perm(int k, int m, int n, int used) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
permutation-sequence.cc	permutation-sequence.cc	1;"	F	language:C++
permutations-ii.cc	permutations-ii.cc	1;"	F	language:C++
permutations.cc	permutations.cc	1;"	F	language:C++
permute	permutations.cc	/^  vector<vector<int> > permute(vector<int> &num) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
permuteUnique	permutations-ii.cc	/^  vector<vector<int> > permuteUnique(vector<int> &num) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
pick	random-pick-index.cc	/^  int pick(int target) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
pii	count-of-smaller-numbers-after-self.cc	/^typedef pair<int, int> pii;$/;"	t	language:C++	typeref:typename:pair<int,int>	file:
pii	find-k-pairs-with-smallest-sums.cc	/^    typedef pair<int, int> pii;$/;"	t	language:C++	function:Solution::kSmallestPairs	typeref:typename:pair<int,int>	file:
pii	shortest-distance-from-all-buildings.cc	/^typedef pair<int, int> pii;$/;"	t	language:C++	typeref:typename:pair<int,int>	file:
pii	super-ugly-number.cc	/^typedef pair<int, int> pii;$/;"	t	language:C++	typeref:typename:pair<int,int>	file:
pli	count-of-range-sum.cc	/^    typedef pair<long, int> pli;$/;"	t	language:C++	function:Solution::countRangeSum	typeref:typename:pair<long,int>	file:
plus-one-linked-list.cc	plus-one-linked-list.cc	1;"	F	language:C++
plus-one.cc	plus-one.cc	1;"	F	language:C++
plusOne	plus-one-linked-list.cc	/^  ListNode* plusOne(ListNode* head) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
plusOne	plus-one.cc	/^  vector<int> plusOne(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
plus_to_minus	create-maximum-number.cc	/^  void plus_to_minus(T a[], int sa[], int n, int k)$/;"	f	language:C++	namespace:KoAluru	typeref:typename:void
pointer	serialize-and-deserialize-binary-tree.cc	/^  TreeNode *pointer(TreeNode *x) {$/;"	f	language:C++	class:Codec	typeref:typename:TreeNode *	file:
pointerReversal	plus-one-linked-list.cc	/^  ListNode* pointerReversal(ListNode* x) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
pop	implement-queue-using-stacks.cc	/^  void pop(void) {$/;"	f	language:C++	class:Queue	typeref:typename:void	file:
pop	implement-stack-using-queues.cc	/^  void pop() {$/;"	f	language:C++	class:Stack	typeref:typename:void	file:
pop	min-stack.cc	/^  void pop() {$/;"	f	language:C++	class:MinStack	typeref:typename:void	file:
populating-next-right-pointers-in-each-node-ii.cc	populating-next-right-pointers-in-each-node-ii.cc	1;"	F	language:C++
populating-next-right-pointers-in-each-node.cc	populating-next-right-pointers-in-each-node.cc	1;"	F	language:C++
postTweet	design-twitter.cc	/^  void postTweet(int userId, int tweetId) {$/;"	f	language:C++	class:Twitter	typeref:typename:void	file:
postorder	largest-bst-subtree.cc	/^  bool postorder(TreeNode *x, long &mn, long &mx, long &size) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
postorderTraversal	binary-tree-postorder-traversal.cc	/^  vector<int> postorderTraversal(TreeNode *p) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
postorderTraversal	binary-tree-postorder-traversal.cc	/^  vector<int> postorderTraversal(TreeNode* root) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
pow	powx-n.cc	/^  double pow(double x, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:double	file:
power-of-four.cc	power-of-four.cc	1;"	F	language:C++
power-of-three.cc	power-of-three.cc	1;"	F	language:C++
power-of-two.cc	power-of-two.cc	1;"	F	language:C++
powx-n.cc	powx-n.cc	1;"	F	language:C++
preorderTraversal	binary-tree-preorder-traversal.cc	/^  vector<int> preorderTraversal(TreeNode *p) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
product-of-array-except-self.cc	product-of-array-except-self.cc	1;"	F	language:C++
productExceptSelf	product-of-array-except-self.cc	/^  vector<int> productExceptSelf(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
push	implement-queue-using-stacks.cc	/^  void push(int x) {$/;"	f	language:C++	class:Queue	typeref:typename:void	file:
push	implement-stack-using-queues.cc	/^  void push(int x) {$/;"	f	language:C++	class:Stack	typeref:typename:void	file:
push	min-stack.cc	/^  void push(int x) {$/;"	f	language:C++	class:MinStack	typeref:typename:void	file:
q	design-hit-counter.cc	/^  queue<int> q;$/;"	m	language:C++	class:HitCounter	typeref:typename:queue<int>	file:
q	implement-stack-using-queues.cc	/^  queue<int> q;$/;"	m	language:C++	class:Stack	typeref:typename:queue<int>	file:
q	n-queens.cc	/^  vector<vector<string>> q;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<string>>	file:
queue-reconstruction-by-height.cc	queue-reconstruction-by-height.cc	1;"	F	language:C++
r	android-unlock-patterns.cc	/^  long a[9], r;$/;"	m	language:C++	class:Solution	typeref:typename:long[9]	file:
r	binary-tree-paths.cc	/^  vector<string> r;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
r	find-leaves-of-binary-tree.cc	/^  vector<vector<int>> r;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
r	generalized-abbreviation.cc	/^  vector<string> r;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
r	palindrome-partitioning.cc	/^  vector<vector<string>> r;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<string>>	file:
r	path-sum-ii.cc	/^  vector<vector<int> > r;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
r	path-sum-iii.cc	/^  int sum, r = 0;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
r	permutations.cc	/^  vector<vector<int>> r;$/;"	m	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
r	word-break-ii.cc	/^  vector<int> r;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
radix_sort	repeated-dna-sequences.cc	/^void radix_sort(const vector<E> &sa, int n, vector<E> &sa2, vector<int> &r)$/;"	f	language:C++	typeref:typename:void
random-pick-index.cc	random-pick-index.cc	1;"	F	language:C++
range-addition.cc	range-addition.cc	1;"	F	language:C++
range-sum-query-2d-immutable.cc	range-sum-query-2d-immutable.cc	1;"	F	language:C++
range-sum-query-2d-mutable.cc	range-sum-query-2d-mutable.cc	1;"	F	language:C++
range-sum-query-immutable.cc	range-sum-query-immutable.cc	1;"	F	language:C++
range-sum-query-mutable.cc	range-sum-query-mutable.cc	1;"	F	language:C++
rangeBitwiseAnd	bitwise-and-of-numbers-range.cc	/^  int rangeBitwiseAnd(int m, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
ransom-note.cc	ransom-note.cc	1;"	F	language:C++
read	read-n-characters-given-read4-ii-call-multiple-times.cc	/^  int read(char *buf, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
read	read-n-characters-given-read4.cc	/^  int read(char *buf, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
read-n-characters-given-read4-ii-call-multiple-times.cc	read-n-characters-given-read4-ii-call-multiple-times.cc	1;"	F	language:C++
read-n-characters-given-read4.cc	read-n-characters-given-read4.cc	1;"	F	language:C++
readBinaryWatch	binary-watch.cc	/^  vector<string> readBinaryWatch(int num) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
rear	read-n-characters-given-read4-ii-call-multiple-times.cc	/^  char a[4], *fore = a, *rear = a;$/;"	m	language:C++	class:Solution	typeref:typename:char[4]**	file:
rearrange-string-k-distance-apart.cc	rearrange-string-k-distance-apart.cc	1;"	F	language:C++
rearrangeString	rearrange-string-k-distance-apart.cc	/^  string rearrangeString(string str, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
reconstruct-itinerary.cc	reconstruct-itinerary.cc	1;"	F	language:C++
reconstruct-original-digits-from-english.cc	reconstruct-original-digits-from-english.cc	1;"	F	language:C++
reconstructQueue	queue-reconstruction-by-height.cc	/^  vector<pair<int, int>> reconstructQueue(vector<pair<int, int>>& people) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<pair<int,int>>	file:
recover-binary-search-tree.cc	recover-binary-search-tree.cc	1;"	F	language:C++
recoverTree	recover-binary-search-tree.cc	/^  void recoverTree(TreeNode *p) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
rectangle-area.cc	rectangle-area.cc	1;"	F	language:C++
regular-expression-matching.cc	regular-expression-matching.cc	1;"	F	language:C++
release	design-phone-directory.cc	/^  void release(int number) {$/;"	f	language:C++	class:PhoneDirectory	typeref:typename:void	file:
remove	insert-delete-getrandom-o1-duplicates-allowed.cc	/^  bool remove(int val) {$/;"	f	language:C++	class:RandomizedCollection	typeref:typename:bool	file:
remove	insert-delete-getrandom-o1.cc	/^  bool remove(int val) {$/;"	f	language:C++	class:RandomizedSet	typeref:typename:bool	file:
remove-duplicate-letters.cc	remove-duplicate-letters.cc	1;"	F	language:C++
remove-duplicates-from-sorted-array-ii.cc	remove-duplicates-from-sorted-array-ii.cc	1;"	F	language:C++
remove-duplicates-from-sorted-array.cc	remove-duplicates-from-sorted-array.cc	1;"	F	language:C++
remove-duplicates-from-sorted-list-ii.cc	remove-duplicates-from-sorted-list-ii.cc	1;"	F	language:C++
remove-duplicates-from-sorted-list.cc	remove-duplicates-from-sorted-list.cc	1;"	F	language:C++
remove-element.cc	remove-element.cc	1;"	F	language:C++
remove-invalid-parentheses.cc	remove-invalid-parentheses.cc	1;"	F	language:C++
remove-k-digits.cc	remove-k-digits.cc	1;"	F	language:C++
remove-linked-list-elements.cc	remove-linked-list-elements.cc	1;"	F	language:C++
remove-nth-node-from-end-of-list.cc	remove-nth-node-from-end-of-list.cc	1;"	F	language:C++
removeDuplicateLetters	remove-duplicate-letters.cc	/^  string removeDuplicateLetters(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
removeDuplicates	remove-duplicates-from-sorted-array-ii.cc	/^  int removeDuplicates(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
removeDuplicates	remove-duplicates-from-sorted-array.cc	/^  int removeDuplicates(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
removeElement	remove-element.cc	/^  int removeElement(vector<int> &a, int val) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
removeElements	remove-linked-list-elements.cc	/^  ListNode* removeElements(ListNode* x, int val) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
removeInvalidParentheses	remove-invalid-parentheses.cc	/^  vector<string> removeInvalidParentheses(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
removeKdigits	remove-k-digits.cc	/^  string removeKdigits(string num, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
removeNthFromEnd	remove-nth-node-from-end-of-list.cc	/^  ListNode *removeNthFromEnd(ListNode *head, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
reorder-list.cc	reorder-list.cc	1;"	F	language:C++
reorderList	reorder-list.cc	/^  void reorderList(ListNode *head) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
repeated-dna-sequences.cc	repeated-dna-sequences.cc	1;"	F	language:C++
repeated-substring-pattern.cc	repeated-substring-pattern.cc	1;"	F	language:C++
repeatedSubstringPattern	repeated-substring-pattern.cc	/^  bool repeatedSubstringPattern(string str) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
res	expression-add-operators.cc	/^  vector<string> res;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
res	remove-invalid-parentheses.cc	/^  unordered_set<string> res;$/;"	m	language:C++	class:Solution	typeref:typename:unordered_set<string>	file:
res	remove-invalid-parentheses.cc	/^  vector<string> halves, res;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
res	sudoku-solver.cc	/^  int L[M], R[M], U[M], D[M], col[M], size[M], res[N*N];$/;"	m	language:C++	class:Solution	typeref:typename:int[][][][][][][]	file:
reset	shuffle-an-array.cc	/^  vector<int> reset() { return a; }$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
restore-ip-addresses.cc	restore-ip-addresses.cc	1;"	F	language:C++
restoreIpAddresses	restore-ip-addresses.cc	/^  vector<string> restoreIpAddresses(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
ret	reconstruct-itinerary.cc	/^  vector<string> ret;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
rev	palindrome-linked-list.cc	/^  ListNode *rev(ListNode *x) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
reverse	reverse-integer.cc	/^  int reverse(int x) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
reverse-bits.cc	reverse-bits.cc	1;"	F	language:C++
reverse-integer.cc	reverse-integer.cc	1;"	F	language:C++
reverse-linked-list-ii.cc	reverse-linked-list-ii.cc	1;"	F	language:C++
reverse-linked-list.cc	reverse-linked-list.cc	1;"	F	language:C++
reverse-nodes-in-k-group.cc	reverse-nodes-in-k-group.cc	1;"	F	language:C++
reverse-string.cc	reverse-string.cc	1;"	F	language:C++
reverse-vowels-of-a-string.cc	reverse-vowels-of-a-string.cc	1;"	F	language:C++
reverse-words-in-a-string-ii.cc	reverse-words-in-a-string-ii.cc	1;"	F	language:C++
reverse-words-in-a-string.cc	reverse-words-in-a-string.cc	1;"	F	language:C++
reverseBetween	reverse-linked-list-ii.cc	/^  ListNode *reverseBetween(ListNode *head, int m, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
reverseBits	reverse-bits.cc	/^  uint32_t reverseBits(uint32_t n) {$/;"	f	language:C++	class:Solution	typeref:typename:uint32_t	file:
reverseKGroup	reverse-nodes-in-k-group.cc	/^  ListNode *reverseKGroup(ListNode *head, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
reverseList	reverse-linked-list.cc	/^  ListNode* reverseList(ListNode* x) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
reverseString	reverse-string.cc	/^  string reverseString(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
reverseVowels	reverse-vowels-of-a-string.cc	/^  string reverseVowels(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
reverseWords	reverse-words-in-a-string-ii.cc	/^  void reverseWords(string &s) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
reverseWords	reverse-words-in-a-string.cc	/^    void reverseWords(string &s) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
reverse_right_chain	binary-tree-postorder-traversal.cc	/^  void reverse_right_chain(TreeNode *x, TreeNode *y) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
reverse_right_chain	count-univalue-subtrees.cc	/^  void reverse_right_chain(TreeNode *x, TreeNode *y) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
rightSideView	binary-tree-right-side-view.cc	/^  vector<int> rightSideView(TreeNode *x) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
rob	house-robber-ii.cc	/^  int rob(vector<int>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
rob	house-robber-iii.cc	/^  int rob(TreeNode* root) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
rob	house-robber.cc	/^  int rob(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
roman-to-integer.cc	roman-to-integer.cc	1;"	F	language:C++
romanToInt	roman-to-integer.cc	/^   int romanToInt(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
root	add-and-search-word-data-structure-design.cc	/^  } *root;$/;"	m	language:C++	class:WordDictionary	typeref:class:WordDictionary::TrieNode *	file:
root	implement-trie-prefix-tree.cc	/^  TrieNode* root;$/;"	m	language:C++	class:Trie	typeref:typename:TrieNode *	file:
root	word-search-ii.cc	/^  } *root;$/;"	m	language:C++	class:Solution	typeref:class:Solution::TrieNode *	file:
rotate	rotate-array.cc	/^  void rotate(vector<int> &a, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
rotate	rotate-array.cc	/^  void rotate(vector<int> &a, int m) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
rotate	rotate-image.cc	/^  void rotate(vector<vector<int> > &a) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
rotate-array.cc	rotate-array.cc	1;"	F	language:C++
rotate-function.cc	rotate-function.cc	1;"	F	language:C++
rotate-image.cc	rotate-image.cc	1;"	F	language:C++
rotate-list.cc	rotate-list.cc	1;"	F	language:C++
rotateRight	rotate-list.cc	/^  ListNode *rotateRight(ListNode *head, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
row	smallest-rectangle-enclosing-black-pixels.cc	/^  int row(vector<vector<char>> &a, int l, int h, bool flag) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
rr	palindrome-partitioning.cc	/^  vector<string> rr;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
rr	word-break-ii.cc	/^  vector<string> rr;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
russian-doll-envelopes.cc	russian-doll-envelopes.cc	1;"	F	language:C++
s	binary-search-tree-iterator.cc	/^  stack<TreeNode *> s;$/;"	m	language:C++	class:BSTIterator	typeref:typename:stack<TreeNode * >	file:
s	data-stream-as-disjoint-intervals.cc	/^  set<int> s;$/;"	m	language:C++	class:SummaryRanges	typeref:typename:set<int>	file:
s	flatten-nested-list-iterator.cc	/^  stack<pair<vector<NestedInteger>::iterator, vector<NestedInteger>::iterator>> s;$/;"	m	language:C++	class:NestedIterator	typeref:typename:stack<pair<vector<NestedInteger>::iterator,vector<NestedInteger>::iterator>>	file:
s	lru-cache.cc	/^  map<int, list<pair<int, int> >::iterator> s;$/;"	m	language:C++	class:LRUCache	typeref:typename:map<int,list<pair<int,int>>::iterator>	file:
s	min-stack.cc	/^  unsigned s, d;$/;"	m	language:C++	class:MinStack	typeref:typename:unsigned	file:
s	n-queens.cc	/^  vector<string> s;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
s	word-pattern-ii.cc	/^  string p, s;$/;"	m	language:C++	class:Solution	typeref:typename:string	file:
same-tree.cc	same-tree.cc	1;"	F	language:C++
scramble-string.cc	scramble-string.cc	1;"	F	language:C++
search	add-and-search-word-data-structure-design.cc	/^  bool search(const string &word, string::size_type i, TrieNode *x) {$/;"	f	language:C++	class:WordDictionary	typeref:typename:bool	file:
search	add-and-search-word-data-structure-design.cc	/^  bool search(string word) {$/;"	f	language:C++	class:WordDictionary	typeref:typename:bool	file:
search	implement-trie-prefix-tree.cc	/^  bool search(string key) {$/;"	f	language:C++	class:Trie	typeref:typename:bool	file:
search	search-in-rotated-sorted-array-ii.cc	/^  bool search(vector<int> &a, int target) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
search	search-in-rotated-sorted-array.cc	/^  int search(vector<int> &a, int target) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
search-a-2d-matrix-ii.cc	search-a-2d-matrix-ii.cc	1;"	F	language:C++
search-a-2d-matrix.cc	search-a-2d-matrix.cc	1;"	F	language:C++
search-for-a-range.cc	search-for-a-range.cc	1;"	F	language:C++
search-in-rotated-sorted-array-ii.cc	search-in-rotated-sorted-array-ii.cc	1;"	F	language:C++
search-in-rotated-sorted-array.cc	search-in-rotated-sorted-array.cc	1;"	F	language:C++
search-insert-position.cc	search-insert-position.cc	1;"	F	language:C++
searchInsert	search-insert-position.cc	/^  int searchInsert(vector<int> &a, int target) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
searchMatrix	search-a-2d-matrix-ii.cc	/^  bool searchMatrix(vector<vector<int>> &a, int x) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
searchMatrix	search-a-2d-matrix.cc	/^  bool searchMatrix(vector<vector<int> > &a, int b) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
searchRange	search-for-a-range.cc	/^  vector<int> searchRange(vector<int> &a, int target) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
select	sliding-window-median.cc	/^  int select(int k, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
self-crossing.cc	self-crossing.cc	1;"	F	language:C++
sequence-reconstruction.cc	sequence-reconstruction.cc	1;"	F	language:C++
sequenceReconstruction	sequence-reconstruction.cc	/^  bool sequenceReconstruction(vector<int>& org, vector<vector<int>>& seqs) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
serialize	serialize-and-deserialize-binary-tree.cc	/^  string serialize(TreeNode *x) {$/;"	f	language:C++	class:Codec	typeref:typename:string	file:
serialize	serialize-and-deserialize-binary-tree.cc	/^  string serialize(TreeNode* root) {$/;"	f	language:C++	class:Codec	typeref:typename:string	file:
serialize-and-deserialize-binary-tree.cc	serialize-and-deserialize-binary-tree.cc	1;"	F	language:C++
set	lru-cache.cc	/^  void set(int key, int value) {$/;"	f	language:C++	class:LRUCache	typeref:typename:void	file:
set-matrix-zeroes.cc	set-matrix-zeroes.cc	1;"	F	language:C++
setZeroes	set-matrix-zeroes.cc	/^  void setZeroes(vector<vector<int> > &a) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
shell.md	shell.md	1;"	F	language:markdown
shortest	shortest-word-distance-ii.cc	/^  int shortest(string word1, string word2) {$/;"	f	language:C++	class:WordDistance	typeref:typename:int	file:
shortest-distance-from-all-buildings.cc	shortest-distance-from-all-buildings.cc	1;"	F	language:C++
shortest-palindrome.cc	shortest-palindrome.cc	1;"	F	language:C++
shortest-word-distance-ii.cc	shortest-word-distance-ii.cc	1;"	F	language:C++
shortest-word-distance-iii.cc	shortest-word-distance-iii.cc	1;"	F	language:C++
shortest-word-distance.cc	shortest-word-distance.cc	1;"	F	language:C++
shortestDistance	shortest-distance-from-all-buildings.cc	/^  int shortestDistance(vector<vector<int>>& grid) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
shortestDistance	shortest-word-distance.cc	/^  int shortestDistance(vector<string>& words, string word1, string word2) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
shortestPalindrome	shortest-palindrome.cc	/^  string shortestPalindrome(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
shortestWordDistance	shortest-word-distance-iii.cc	/^  int shortestWordDistance(vector<string>& words, string word1, string word2) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
shouldPrintMessage	logger-rate-limiter.cc	/^  bool shouldPrintMessage(int timestamp, string message) {$/;"	f	language:C++	class:Logger	typeref:typename:bool	file:
shuffle	shuffle-an-array.cc	/^  vector<int> shuffle() {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
shuffle-an-array.cc	shuffle-an-array.cc	1;"	F	language:C++
simplify-path.cc	simplify-path.cc	1;"	F	language:C++
simplifyPath	simplify-path.cc	/^  string simplifyPath(string path) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
single-number-ii.cc	single-number-ii.cc	1;"	F	language:C++
single-number-iii.cc	single-number-iii.cc	1;"	F	language:C++
single-number.cc	single-number.cc	1;"	F	language:C++
singleNumber	single-number-ii.cc	/^  int singleNumber(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
singleNumber	single-number-iii.cc	/^  vector<int> singleNumber(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
singleNumber	single-number.cc	/^  int singleNumber(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
size	linked-list-random-node.cc	/^  int size;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
size	moving-average-from-data-stream.cc	/^  int size, i = 0, n = 0;$/;"	m	language:C++	class:MovingAverage	typeref:typename:int	file:
size	sudoku-solver.cc	/^  int L[M], R[M], U[M], D[M], col[M], size[M], res[N*N];$/;"	m	language:C++	class:Solution	typeref:typename:int[][][][][][]	file:
sliding-window-maximum.cc	sliding-window-maximum.cc	1;"	F	language:C++
sliding-window-median.cc	sliding-window-median.cc	1;"	F	language:C++
smallest-good-base.cc	smallest-good-base.cc	1;"	F	language:C++
smallest-rectangle-enclosing-black-pixels.cc	smallest-rectangle-enclosing-black-pixels.cc	1;"	F	language:C++
smallestGoodBase	smallest-good-base.cc	/^  string smallestGoodBase(string n2) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
solve	surrounded-regions.cc	/^  void solve(vector<vector<char>> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
solveNQueens	n-queens.cc	/^  vector<vector<string> > solveNQueens(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<string>>	file:
solveSudoku	sudoku-solver.cc	/^  void solveSudoku(vector<vector<char> > &a) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
sort-colors.cc	sort-colors.cc	1;"	F	language:C++
sort-list.cc	sort-list.cc	1;"	F	language:C++
sort-transformed-array.cc	sort-transformed-array.cc	1;"	F	language:C++
sortColors	sort-colors.cc	/^  void sortColors(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
sortList	sort-list.cc	/^  ListNode *sortList(ListNode *head) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
sortTransformedArray	sort-transformed-array.cc	/^  vector<int> sortTransformedArray(vector<int>& nums, int a, int b, int c) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
sortedArrayToBST	convert-sorted-array-to-binary-search-tree.cc	/^  TreeNode *sortedArrayToBST(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
sortedListToBST	convert-sorted-list-to-binary-search-tree.cc	/^  TreeNode *sortedListToBST(ListNode *head) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
sparse-matrix-multiplication.cc	sparse-matrix-multiplication.cc	1;"	F	language:C++
spiral-matrix-ii.cc	spiral-matrix-ii.cc	1;"	F	language:C++
spiral-matrix.cc	spiral-matrix.cc	1;"	F	language:C++
spiralOrder	spiral-matrix.cc	/^  vector<int> spiralOrder(vector<vector<int> > &a) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
split	remove-invalid-parentheses.cc	/^  int split;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
split-array-largest-sum.cc	split-array-largest-sum.cc	1;"	F	language:C++
splitArray	split-array-largest-sum.cc	/^  int splitArray(vector<int>& a, int m) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
sqrt	sqrtx.cc	/^  int sqrt(int x) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
sqrtx.cc	sqrtx.cc	1;"	F	language:C++
st	word-pattern-ii.cc	/^  unordered_set<string> st;$/;"	m	language:C++	class:Solution	typeref:typename:unordered_set<string>	file:
startsWith	implement-trie-prefix-tree.cc	/^  bool startsWith(string prefix) {$/;"	f	language:C++	class:Trie	typeref:typename:bool	file:
std	perfect-rectangle.cc	/^namespace std {$/;"	n	language:C++	file:
strStr	implement-strstr.cc	/^  char *strStr(char *haystack, char *needle) {$/;"	f	language:C++	class:Solution	typeref:typename:char *	file:
string-to-integer-atoi.cc	string-to-integer-atoi.cc	1;"	F	language:C++
strobogrammatic-number-ii.cc	strobogrammatic-number-ii.cc	1;"	F	language:C++
strobogrammatic-number-iii.cc	strobogrammatic-number-iii.cc	1;"	F	language:C++
strobogrammatic-number.cc	strobogrammatic-number.cc	1;"	F	language:C++
strobogrammaticInRange	strobogrammatic-number-iii.cc	/^  int strobogrammaticInRange(string low, string high) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
strong-password-checker.cc	strong-password-checker.cc	1;"	F	language:C++
strongPasswordChecker	strong-password-checker.cc	/^  int strongPasswordChecker(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
subsets	subsets.cc	/^  vector<vector<int> > subsets(vector<int> &S) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
subsets-ii.cc	subsets-ii.cc	1;"	F	language:C++
subsets.cc	subsets.cc	1;"	F	language:C++
subsetsWithDup	subsets-ii.cc	/^  vector<vector<int> > subsetsWithDup(vector<int> &S) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
substring-with-concatenation-of-all-words.cc	substring-with-concatenation-of-all-words.cc	1;"	F	language:C++
sudoku-solver.cc	sudoku-solver.cc	1;"	F	language:C++
sum	moving-average-from-data-stream.cc	/^  double sum = 0;$/;"	m	language:C++	class:MovingAverage	typeref:typename:double	file:
sum	path-sum-iii.cc	/^  int sum, r = 0;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
sum	range-sum-query-2d-mutable.cc	/^  int sum(int i, int j) {$/;"	f	language:C++	class:NumMatrix	typeref:typename:int	file:
sum-of-left-leaves.cc	sum-of-left-leaves.cc	1;"	F	language:C++
sum-of-two-integers.cc	sum-of-two-integers.cc	1;"	F	language:C++
sum-root-to-leaf-numbers.cc	sum-root-to-leaf-numbers.cc	1;"	F	language:C++
sumNumbers	sum-root-to-leaf-numbers.cc	/^  int sumNumbers(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
sumOfLeftLeaves	sum-of-left-leaves.cc	/^  int sumOfLeftLeaves(TreeNode* root) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
sumRange	range-sum-query-immutable.cc	/^  int sumRange(int i, int j) {$/;"	f	language:C++	class:NumArray	typeref:typename:int	file:
sumRange	range-sum-query-mutable.cc	/^  int sumRange(int i, int j) {$/;"	f	language:C++	class:NumArray	typeref:typename:int	file:
sumRegion	range-sum-query-2d-immutable.cc	/^  int sumRegion(int row1, int col1, int row2, int col2) {$/;"	f	language:C++	class:NumMatrix	typeref:typename:int	file:
sumRegion	range-sum-query-2d-mutable.cc	/^  int sumRegion(int row1, int col1, int row2, int col2) {$/;"	f	language:C++	class:NumMatrix	typeref:typename:int	file:
summary-ranges.cc	summary-ranges.cc	1;"	F	language:C++
summaryRanges	summary-ranges.cc	/^  vector<string> summaryRanges(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
super-pow.cc	super-pow.cc	1;"	F	language:C++
super-ugly-number.cc	super-ugly-number.cc	1;"	F	language:C++
superPow	super-pow.cc	/^  int superPow(int a, vector<int>& b) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
surrounded-regions.cc	surrounded-regions.cc	1;"	F	language:C++
swap-nodes-in-pairs.cc	swap-nodes-in-pairs.cc	1;"	F	language:C++
swapPairs	swap-nodes-in-pairs.cc	/^  ListNode *swapPairs(ListNode *head) {$/;"	f	language:C++	class:Solution	typeref:typename:ListNode *	file:
symmetric-tree.cc	symmetric-tree.cc	1;"	F	language:C++
t	create-maximum-number.cc	/^  bool *t;$/;"	v	language:C++	namespace:KoAluru	typeref:typename:bool *
tag	serialize-and-deserialize-binary-tree.cc	/^  int tag(TreeNode *x) {$/;"	f	language:C++	class:Codec	typeref:typename:int	file:
target	expression-add-operators.cc	/^  int n, nn, target;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
target	expression-add-operators.cc	/^  int n, target;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
target-sum.cc	target-sum.cc	1;"	F	language:C++
teemo-attacking.cc	teemo-attacking.cc	1;"	F	language:C++
ternary-expression-parser.cc	ternary-expression-parser.cc	1;"	F	language:C++
text-justification.cc	text-justification.cc	1;"	F	language:C++
the-maze.cc	the-maze.cc	1;"	F	language:C++
the-skyline-problem.cc	the-skyline-problem.cc	1;"	F	language:C++
third-maximum-number.cc	third-maximum-number.cc	1;"	F	language:C++
thirdMax	third-maximum-number.cc	/^  int thirdMax(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
threeSum	3sum.cc	/^  vector<vector<int> > threeSum(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
threeSumClosest	3sum-closest.cc	/^  int threeSumClosest(vector<int> &a, int target) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
threeSumSmaller	3sum-smaller.cc	/^  int threeSumSmaller(vector<int>& a, int target) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
tick	design-twitter.cc	/^  int tick = 0;$/;"	m	language:C++	class:Twitter	typeref:typename:int	file:
titleToNumber	excel-sheet-column-number.cc	/^  int titleToNumber(string s) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
toHex	convert-a-number-to-hexadecimal.cc	/^  string toHex(int num) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
top	design-phone-directory.cc	/^  int top = 0;$/;"	m	language:C++	class:PhoneDirectory	typeref:typename:int	file:
top	implement-stack-using-queues.cc	/^  int top() {$/;"	f	language:C++	class:Stack	typeref:typename:int	file:
top	min-stack.cc	/^  int top() {$/;"	f	language:C++	class:MinStack	typeref:typename:int	file:
top-k-frequent-elements.cc	top-k-frequent-elements.cc	1;"	F	language:C++
topKFrequent	top-k-frequent-elements.cc	/^  vector<int> topKFrequent(vector<int>& nums, int k) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
tot	nested-list-weight-sum-ii.cc	/^  int tot;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
tot	nested-list-weight-sum.cc	/^  int tot;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
total-hamming-distance.cc	total-hamming-distance.cc	1;"	F	language:C++
totalHammingDistance	total-hamming-distance.cc	/^  int totalHammingDistance(vector<int>& nums) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
totalNQueens	n-queens-ii.cc	/^  int totalNQueens(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
touch	lru-cache.cc	/^  void touch(int key) {$/;"	f	language:C++	class:LRUCache	typeref:typename:void	file:
trailingZeroes	factorial-trailing-zeroes.cc	/^  int trailingZeroes(int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
trap	trapping-rain-water.cc	/^  int trap(vector<int> &h) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
trapRainWater	trapping-rain-water-ii.cc	/^  int trapRainWater(vector<vector<int>>& h) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
trapping-rain-water-ii.cc	trapping-rain-water-ii.cc	1;"	F	language:C++
trapping-rain-water.cc	trapping-rain-water.cc	1;"	F	language:C++
triangle.cc	triangle.cc	1;"	F	language:C++
tweets	design-twitter.cc	/^  unordered_map<int, vector<pair<int, int>>> tweets;$/;"	m	language:C++	class:Twitter	typeref:typename:unordered_map<int,vector<pair<int,int>>>	file:
two-sum-ii-input-array-is-sorted.cc	two-sum-ii-input-array-is-sorted.cc	1;"	F	language:C++
two-sum-iii-data-structure-design.cc	two-sum-iii-data-structure-design.cc	1;"	F	language:C++
two-sum.cc	two-sum.cc	1;"	F	language:C++
twoSum	two-sum-ii-input-array-is-sorted.cc	/^  vector<int> twoSum(vector<int> &a, int target) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
twoSum	two-sum.cc	/^    vector<int> twoSum(vector<int> &a, int s) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<int>	file:
ugly-number-ii.cc	ugly-number-ii.cc	1;"	F	language:C++
ugly-number.cc	ugly-number.cc	1;"	F	language:C++
uncover	sudoku-solver.cc	/^  void uncover(int c) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
unfollow	design-twitter.cc	/^  void unfollow(int followerId, int followeeId) {$/;"	f	language:C++	class:Twitter	typeref:typename:void	file:
unique-binary-search-trees-ii.cc	unique-binary-search-trees-ii.cc	1;"	F	language:C++
unique-binary-search-trees.cc	unique-binary-search-trees.cc	1;"	F	language:C++
unique-paths-ii.cc	unique-paths-ii.cc	1;"	F	language:C++
unique-paths.cc	unique-paths.cc	1;"	F	language:C++
unique-substrings-in-wraparound-string.cc	unique-substrings-in-wraparound-string.cc	1;"	F	language:C++
unique-word-abbreviation.cc	unique-word-abbreviation.cc	1;"	F	language:C++
uniquePaths	unique-paths.cc	/^  int uniquePaths(int m, int n) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
uniquePathsWithObstacles	unique-paths-ii.cc	/^  int uniquePathsWithObstacles(vector<vector<int> > &a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
update	range-sum-query-2d-mutable.cc	/^  void update(int row, int col, int val) {$/;"	f	language:C++	class:NumMatrix	typeref:typename:void	file:
update	range-sum-query-mutable.cc	/^  void update(int i, int val) {$/;"	f	language:C++	class:NumArray	typeref:typename:void	file:
upper	count-of-range-sum.cc	/^  int lower, upper;$/;"	m	language:C++	class:Solution	typeref:typename:int	file:
upsideDownBinaryTree	binary-tree-upside-down.cc	/^  TreeNode* upsideDownBinaryTree(TreeNode *x) {$/;"	f	language:C++	class:Solution	typeref:typename:TreeNode *	file:
used	design-phone-directory.cc	/^  vector<bool> used;$/;"	m	language:C++	class:PhoneDirectory	typeref:typename:vector<bool>	file:
utf-8-validation.cc	utf-8-validation.cc	1;"	F	language:C++
v	all-oone-data-structure.cc	/^  struct Bucket { int v; unordered_set<string> ks; };$/;"	m	language:C++	struct:AllOne::Bucket	typeref:typename:int	file:
val	evaluate-division.cc	/^  unordered_map<string, pair<int, double>> val;$/;"	m	language:C++	class:Solution	typeref:typename:unordered_map<string,pair<int,double>>	file:
valid-anagram.cc	valid-anagram.cc	1;"	F	language:C++
valid-number.cc	valid-number.cc	1;"	F	language:C++
valid-palindrome.cc	valid-palindrome.cc	1;"	F	language:C++
valid-parentheses.cc	valid-parentheses.cc	1;"	F	language:C++
valid-perfect-square.cc	valid-perfect-square.cc	1;"	F	language:C++
valid-sudoku.cc	valid-sudoku.cc	1;"	F	language:C++
valid-word-abbreviation.cc	valid-word-abbreviation.cc	1;"	F	language:C++
valid-word-square.cc	valid-word-square.cc	1;"	F	language:C++
validIPAddress	validate-ip-address.cc	/^  string validIPAddress(string IP) {$/;"	f	language:C++	class:Solution	typeref:typename:string	file:
validTree	graph-valid-tree.cc	/^  bool validTree(int n, vector<pair<int, int>>& edges) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
validUtf8	utf-8-validation.cc	/^  bool validUtf8(vector<int>& data) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
validWordAbbreviation	valid-word-abbreviation.cc	/^  bool validWordAbbreviation(string word, string abbr) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
validWordSquare	valid-word-square.cc	/^  bool validWordSquare(vector<string>& words) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
validate-binary-search-tree.cc	validate-binary-search-tree.cc	1;"	F	language:C++
validate-ip-address.cc	validate-ip-address.cc	1;"	F	language:C++
verify-preorder-sequence-in-binary-search-tree.cc	verify-preorder-sequence-in-binary-search-tree.cc	1;"	F	language:C++
verify-preorder-serialization-of-a-binary-tree.cc	verify-preorder-serialization-of-a-binary-tree.cc	1;"	F	language:C++
verifyPreorder	verify-preorder-sequence-in-binary-search-tree.cc	/^  bool verifyPreorder(vector<int>& preorder) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
verticalOrder	binary-tree-vertical-order-traversal.cc	/^  vector<vector<int>> verticalOrder(TreeNode* root) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
w	design-snake-game.cc	/^  int w, h, x = 0, y = 0;$/;"	m	language:C++	class:SnakeGame	typeref:typename:int	file:
walls-and-gates.cc	walls-and-gates.cc	1;"	F	language:C++
wallsAndGates	walls-and-gates.cc	/^  void wallsAndGates(vector<vector<int>> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
water-and-jug-problem.cc	water-and-jug-problem.cc	1;"	F	language:C++
wiggle-sort-ii.cc	wiggle-sort-ii.cc	1;"	F	language:C++
wiggle-sort.cc	wiggle-sort.cc	1;"	F	language:C++
wiggle-subsequence.cc	wiggle-subsequence.cc	1;"	F	language:C++
wiggleMaxLength	wiggle-subsequence.cc	/^  int wiggleMaxLength(vector<int>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:int	file:
wiggleSort	wiggle-sort-ii.cc	/^  void wiggleSort(vector<int> &a) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
wiggleSort	wiggle-sort.cc	/^  void wiggleSort(vector<int>& a) {$/;"	f	language:C++	class:Solution	typeref:typename:void	file:
wildcard-matching.cc	wildcard-matching.cc	1;"	F	language:C++
word-break-ii.cc	word-break-ii.cc	1;"	F	language:C++
word-break.cc	word-break.cc	1;"	F	language:C++
word-ladder-ii.cc	word-ladder-ii.cc	1;"	F	language:C++
word-ladder.cc	word-ladder.cc	1;"	F	language:C++
word-pattern-ii.cc	word-pattern-ii.cc	1;"	F	language:C++
word-pattern.cc	word-pattern.cc	1;"	F	language:C++
word-search-ii.cc	word-search-ii.cc	1;"	F	language:C++
word-search.cc	word-search.cc	1;"	F	language:C++
wordBreak	word-break-ii.cc	/^  vector<string> wordBreak(string s, unordered_set<string> &dict) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<string>	file:
wordBreak	word-break.cc	/^  bool wordBreak(string s, unordered_set<string> &dict) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
wordPattern	word-pattern.cc	/^  bool wordPattern(string pattern, string str) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
wordPatternMatch	word-pattern-ii.cc	/^  bool wordPatternMatch(string pattern, string str) {$/;"	f	language:C++	class:Solution	typeref:typename:bool	file:
words	word-search-ii.cc	/^  vector<string> words, ans;$/;"	m	language:C++	class:Solution	typeref:typename:vector<string>	file:
x	binary-search-tree-iterator.cc	/^  TreeNode *x;$/;"	m	language:C++	class:BSTIterator	typeref:typename:TreeNode *	file:
x	design-snake-game.cc	/^  int w, h, x = 0, y = 0;$/;"	m	language:C++	class:SnakeGame	typeref:typename:int	file:
x	peeking-iterator.cc	/^  int x;$/;"	m	language:C++	class:PeekingIterator	typeref:typename:int	file:
y	design-snake-game.cc	/^  int w, h, x = 0, y = 0;$/;"	m	language:C++	class:SnakeGame	typeref:typename:int	file:
z	palindrome-pairs.cc	/^  vector<int> z;$/;"	m	language:C++	class:Solution	typeref:typename:vector<int>	file:
zigzag-conversion.cc	zigzag-conversion.cc	1;"	F	language:C++
zigzag-iterator.cc	zigzag-iterator.cc	1;"	F	language:C++
zigzagLevelOrder	binary-tree-zigzag-level-order-traversal.cc	/^  vector<vector<int> > zigzagLevelOrder(TreeNode *root) {$/;"	f	language:C++	class:Solution	typeref:typename:vector<vector<int>>	file:
